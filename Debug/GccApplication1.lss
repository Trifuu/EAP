
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007e  00800100  00000d70  00000e04  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d70  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  0080017e  0080017e  00000e82  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e82  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ee0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000198  00000000  00000000  00000f20  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a0b  00000000  00000000  000010b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bb7  00000000  00000000  00002ac3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000cf8  00000000  00000000  0000367a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000394  00000000  00000000  00004374  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005cd  00000000  00000000  00004708  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000cc2  00000000  00000000  00004cd5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000170  00000000  00000000  00005997  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__ctors_end>
   4:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
   8:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
   c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  10:	0c 94 33 02 	jmp	0x466	; 0x466 <__vector_4>
  14:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  18:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  1c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  20:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  24:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  28:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  2c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  30:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  34:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  38:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  3c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  40:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  44:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  48:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  4c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  50:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  54:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  58:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  5c:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  60:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  64:	0c 94 6d 00 	jmp	0xda	; 0xda <__bad_interrupt>
  68:	02 02       	muls	r16, r18
  6a:	02 02       	muls	r16, r18
  6c:	f5 01       	movw	r30, r10
  6e:	f5 01       	movw	r30, r10
  70:	04 02       	muls	r16, r20
  72:	04 02       	muls	r16, r20
  74:	f7 01       	movw	r30, r14
  76:	f7 01       	movw	r30, r14
  78:	f9 01       	movw	r30, r18
  7a:	f9 01       	movw	r30, r18
  7c:	fb 01       	movw	r30, r22
  7e:	fb 01       	movw	r30, r22
  80:	fd 01       	movw	r30, r26
  82:	fd 01       	movw	r30, r26
  84:	ff 01       	movw	r30, r30
  86:	ff 01       	movw	r30, r30
  88:	9f 02       	muls	r25, r31
  8a:	a7 02       	muls	r26, r23
  8c:	af 02       	muls	r26, r31
  8e:	b7 02       	muls	r27, r23
  90:	bf 02       	muls	r27, r31
  92:	c7 02       	muls	r28, r23
  94:	cf 02       	muls	r28, r31
  96:	d7 02       	muls	r29, r23
  98:	df 02       	muls	r29, r31
  9a:	e7 02       	muls	r30, r23
  9c:	ef 02       	muls	r30, r31
  9e:	fe 02       	muls	r31, r30

000000a0 <__ctors_end>:
  a0:	11 24       	eor	r1, r1
  a2:	1f be       	out	0x3f, r1	; 63
  a4:	cf ef       	ldi	r28, 0xFF	; 255
  a6:	d8 e0       	ldi	r29, 0x08	; 8
  a8:	de bf       	out	0x3e, r29	; 62
  aa:	cd bf       	out	0x3d, r28	; 61

000000ac <__do_copy_data>:
  ac:	11 e0       	ldi	r17, 0x01	; 1
  ae:	a0 e0       	ldi	r26, 0x00	; 0
  b0:	b1 e0       	ldi	r27, 0x01	; 1
  b2:	e0 e7       	ldi	r30, 0x70	; 112
  b4:	fd e0       	ldi	r31, 0x0D	; 13
  b6:	02 c0       	rjmp	.+4      	; 0xbc <__do_copy_data+0x10>
  b8:	05 90       	lpm	r0, Z+
  ba:	0d 92       	st	X+, r0
  bc:	ae 37       	cpi	r26, 0x7E	; 126
  be:	b1 07       	cpc	r27, r17
  c0:	d9 f7       	brne	.-10     	; 0xb8 <__do_copy_data+0xc>

000000c2 <__do_clear_bss>:
  c2:	21 e0       	ldi	r18, 0x01	; 1
  c4:	ae e7       	ldi	r26, 0x7E	; 126
  c6:	b1 e0       	ldi	r27, 0x01	; 1
  c8:	01 c0       	rjmp	.+2      	; 0xcc <.do_clear_bss_start>

000000ca <.do_clear_bss_loop>:
  ca:	1d 92       	st	X+, r1

000000cc <.do_clear_bss_start>:
  cc:	ab 38       	cpi	r26, 0x8B	; 139
  ce:	b2 07       	cpc	r27, r18
  d0:	e1 f7       	brne	.-8      	; 0xca <.do_clear_bss_loop>
  d2:	0e 94 45 01 	call	0x28a	; 0x28a <main>
  d6:	0c 94 b6 06 	jmp	0xd6c	; 0xd6c <_exit>

000000da <__bad_interrupt>:
  da:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000de <toggle_e>:

    while ( (c = pgm_read_byte(progmem_s++)) ) {
        lcd_putc(c);
    }

}/* lcd_puts_p */
  de:	5e 9a       	sbi	0x0b, 6	; 11
  e0:	85 e0       	ldi	r24, 0x05	; 5
  e2:	8a 95       	dec	r24
  e4:	f1 f7       	brne	.-4      	; 0xe2 <toggle_e+0x4>
  e6:	00 00       	nop
  e8:	5e 98       	cbi	0x0b, 6	; 11
  ea:	08 95       	ret

000000ec <lcd_write>:
  ec:	cf 93       	push	r28
  ee:	df 93       	push	r29
  f0:	d8 2f       	mov	r29, r24
  f2:	66 23       	and	r22, r22
  f4:	11 f0       	breq	.+4      	; 0xfa <lcd_write+0xe>
  f6:	5c 9a       	sbi	0x0b, 4	; 11
  f8:	01 c0       	rjmp	.+2      	; 0xfc <lcd_write+0x10>
  fa:	5c 98       	cbi	0x0b, 4	; 11
  fc:	5d 98       	cbi	0x0b, 5	; 11
  fe:	84 b1       	in	r24, 0x04	; 4
 100:	8f 60       	ori	r24, 0x0F	; 15
 102:	84 b9       	out	0x04, r24	; 4
 104:	c5 b1       	in	r28, 0x05	; 5
 106:	c0 7f       	andi	r28, 0xF0	; 240
 108:	8d 2f       	mov	r24, r29
 10a:	82 95       	swap	r24
 10c:	8f 70       	andi	r24, 0x0F	; 15
 10e:	8c 2b       	or	r24, r28
 110:	85 b9       	out	0x05, r24	; 5
 112:	0e 94 6f 00 	call	0xde	; 0xde <toggle_e>
 116:	df 70       	andi	r29, 0x0F	; 15
 118:	dc 2b       	or	r29, r28
 11a:	d5 b9       	out	0x05, r29	; 5
 11c:	0e 94 6f 00 	call	0xde	; 0xde <toggle_e>
 120:	cf 60       	ori	r28, 0x0F	; 15
 122:	c5 b9       	out	0x05, r28	; 5
 124:	df 91       	pop	r29
 126:	cf 91       	pop	r28
 128:	08 95       	ret

0000012a <lcd_read>:
 12a:	88 23       	and	r24, r24
 12c:	11 f0       	breq	.+4      	; 0x132 <lcd_read+0x8>
 12e:	5c 9a       	sbi	0x0b, 4	; 11
 130:	01 c0       	rjmp	.+2      	; 0x134 <lcd_read+0xa>
 132:	5c 98       	cbi	0x0b, 4	; 11
 134:	5d 9a       	sbi	0x0b, 5	; 11
 136:	84 b1       	in	r24, 0x04	; 4
 138:	80 7f       	andi	r24, 0xF0	; 240
 13a:	84 b9       	out	0x04, r24	; 4
 13c:	5e 9a       	sbi	0x0b, 6	; 11
 13e:	85 e0       	ldi	r24, 0x05	; 5
 140:	8a 95       	dec	r24
 142:	f1 f7       	brne	.-4      	; 0x140 <lcd_read+0x16>
 144:	00 00       	nop
 146:	93 b1       	in	r25, 0x03	; 3
 148:	5e 98       	cbi	0x0b, 6	; 11
 14a:	85 e0       	ldi	r24, 0x05	; 5
 14c:	8a 95       	dec	r24
 14e:	f1 f7       	brne	.-4      	; 0x14c <lcd_read+0x22>
 150:	00 00       	nop
 152:	5e 9a       	sbi	0x0b, 6	; 11
 154:	85 e0       	ldi	r24, 0x05	; 5
 156:	8a 95       	dec	r24
 158:	f1 f7       	brne	.-4      	; 0x156 <lcd_read+0x2c>
 15a:	00 00       	nop
 15c:	23 b1       	in	r18, 0x03	; 3
 15e:	2f 70       	andi	r18, 0x0F	; 15
 160:	89 2f       	mov	r24, r25
 162:	82 95       	swap	r24
 164:	80 7f       	andi	r24, 0xF0	; 240
 166:	5e 98       	cbi	0x0b, 6	; 11
 168:	82 2b       	or	r24, r18
 16a:	08 95       	ret

0000016c <lcd_waitbusy>:
 16c:	80 e0       	ldi	r24, 0x00	; 0
 16e:	0e 94 95 00 	call	0x12a	; 0x12a <lcd_read>
 172:	88 23       	and	r24, r24
 174:	dc f3       	brlt	.-10     	; 0x16c <lcd_waitbusy>
 176:	85 e1       	ldi	r24, 0x15	; 21
 178:	8a 95       	dec	r24
 17a:	f1 f7       	brne	.-4      	; 0x178 <lcd_waitbusy+0xc>
 17c:	00 00       	nop
 17e:	80 e0       	ldi	r24, 0x00	; 0
 180:	0e 94 95 00 	call	0x12a	; 0x12a <lcd_read>
 184:	08 95       	ret

00000186 <lcd_command>:
 186:	cf 93       	push	r28
 188:	c8 2f       	mov	r28, r24
 18a:	0e 94 b6 00 	call	0x16c	; 0x16c <lcd_waitbusy>
 18e:	60 e0       	ldi	r22, 0x00	; 0
 190:	8c 2f       	mov	r24, r28
 192:	0e 94 76 00 	call	0xec	; 0xec <lcd_write>
 196:	cf 91       	pop	r28
 198:	08 95       	ret

0000019a <lcd_gotoxy>:
 19a:	61 11       	cpse	r22, r1
 19c:	04 c0       	rjmp	.+8      	; 0x1a6 <lcd_gotoxy+0xc>
 19e:	80 58       	subi	r24, 0x80	; 128
 1a0:	0e 94 c3 00 	call	0x186	; 0x186 <lcd_command>
 1a4:	08 95       	ret
 1a6:	80 54       	subi	r24, 0x40	; 64
 1a8:	0e 94 c3 00 	call	0x186	; 0x186 <lcd_command>
 1ac:	08 95       	ret

000001ae <lcd_clrscr>:
 1ae:	81 e0       	ldi	r24, 0x01	; 1
 1b0:	0e 94 c3 00 	call	0x186	; 0x186 <lcd_command>
 1b4:	08 95       	ret

000001b6 <lcd_home>:
 1b6:	82 e0       	ldi	r24, 0x02	; 2
 1b8:	0e 94 c3 00 	call	0x186	; 0x186 <lcd_command>
 1bc:	08 95       	ret

000001be <lcd_putc>:
 1be:	cf 93       	push	r28
 1c0:	c8 2f       	mov	r28, r24
 1c2:	0e 94 b6 00 	call	0x16c	; 0x16c <lcd_waitbusy>
 1c6:	ca 30       	cpi	r28, 0x0A	; 10
 1c8:	49 f4       	brne	.+18     	; 0x1dc <lcd_putc+0x1e>
 1ca:	80 34       	cpi	r24, 0x40	; 64
 1cc:	10 f0       	brcs	.+4      	; 0x1d2 <lcd_putc+0x14>
 1ce:	80 e0       	ldi	r24, 0x00	; 0
 1d0:	01 c0       	rjmp	.+2      	; 0x1d4 <lcd_putc+0x16>
 1d2:	80 e4       	ldi	r24, 0x40	; 64
 1d4:	80 58       	subi	r24, 0x80	; 128
 1d6:	0e 94 c3 00 	call	0x186	; 0x186 <lcd_command>
 1da:	04 c0       	rjmp	.+8      	; 0x1e4 <lcd_putc+0x26>
 1dc:	61 e0       	ldi	r22, 0x01	; 1
 1de:	8c 2f       	mov	r24, r28
 1e0:	0e 94 76 00 	call	0xec	; 0xec <lcd_write>
 1e4:	cf 91       	pop	r28
 1e6:	08 95       	ret

000001e8 <lcd_puts>:
 1e8:	cf 93       	push	r28
 1ea:	df 93       	push	r29
 1ec:	ec 01       	movw	r28, r24
 1ee:	21 96       	adiw	r28, 0x01	; 1
 1f0:	fc 01       	movw	r30, r24
 1f2:	80 81       	ld	r24, Z
 1f4:	88 23       	and	r24, r24
 1f6:	29 f0       	breq	.+10     	; 0x202 <lcd_puts+0x1a>
 1f8:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_putc>
 1fc:	89 91       	ld	r24, Y+
 1fe:	81 11       	cpse	r24, r1
 200:	fb cf       	rjmp	.-10     	; 0x1f8 <lcd_puts+0x10>
 202:	df 91       	pop	r29
 204:	cf 91       	pop	r28
 206:	08 95       	ret

00000208 <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
 208:	cf 93       	push	r28
 20a:	c8 2f       	mov	r28, r24
    }
    else if ( ( &LCD_DATA0_PORT == &LCD_DATA1_PORT) && ( &LCD_DATA1_PORT == &LCD_DATA2_PORT ) && ( &LCD_DATA2_PORT == &LCD_DATA3_PORT )
           && (LCD_DATA0_PIN == 0 ) && (LCD_DATA1_PIN == 1) && (LCD_DATA2_PIN == 2) && (LCD_DATA3_PIN == 3) )
    {
        /* configure all port bits as output (all LCD data lines on same port, but control lines on different ports) */
        DDR(LCD_DATA0_PORT) |= 0x0F;
 20c:	84 b1       	in	r24, 0x04	; 4
 20e:	8f 60       	ori	r24, 0x0F	; 15
 210:	84 b9       	out	0x04, r24	; 4
        DDR(LCD_RS_PORT)    |= _BV(LCD_RS_PIN);
 212:	54 9a       	sbi	0x0a, 4	; 10
        DDR(LCD_RW_PORT)    |= _BV(LCD_RW_PIN);
 214:	55 9a       	sbi	0x0a, 5	; 10
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
 216:	56 9a       	sbi	0x0a, 6	; 10
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 218:	8f ef       	ldi	r24, 0xFF	; 255
 21a:	99 ef       	ldi	r25, 0xF9	; 249
 21c:	01 97       	sbiw	r24, 0x01	; 1
 21e:	f1 f7       	brne	.-4      	; 0x21c <lcd_init+0x14>
 220:	00 c0       	rjmp	.+0      	; 0x222 <lcd_init+0x1a>
 222:	00 00       	nop
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
    }
    delay(LCD_DELAY_BOOTUP);             /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);    // LCD_FUNCTION>>4;
 224:	29 9a       	sbi	0x05, 1	; 5
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);    // LCD_FUNCTION_8BIT>>4;
 226:	28 9a       	sbi	0x05, 0	; 5
    lcd_e_toggle();
 228:	0e 94 6f 00 	call	0xde	; 0xde <toggle_e>
 22c:	8f e1       	ldi	r24, 0x1F	; 31
 22e:	9e e4       	ldi	r25, 0x4E	; 78
 230:	01 97       	sbiw	r24, 0x01	; 1
 232:	f1 f7       	brne	.-4      	; 0x230 <lcd_init+0x28>
 234:	00 c0       	rjmp	.+0      	; 0x236 <lcd_init+0x2e>
 236:	00 00       	nop
    delay(LCD_DELAY_INIT);               /* delay, busy flag can't be checked here */
   
    /* repeat last command */ 
    lcd_e_toggle();      
 238:	0e 94 6f 00 	call	0xde	; 0xde <toggle_e>
 23c:	8f ef       	ldi	r24, 0xFF	; 255
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	01 97       	sbiw	r24, 0x01	; 1
 242:	f1 f7       	brne	.-4      	; 0x240 <lcd_init+0x38>
 244:	00 c0       	rjmp	.+0      	; 0x246 <lcd_init+0x3e>
 246:	00 00       	nop
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */
    
    /* repeat last command a third time */
    lcd_e_toggle();      
 248:	0e 94 6f 00 	call	0xde	; 0xde <toggle_e>
 24c:	8f ef       	ldi	r24, 0xFF	; 255
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	01 97       	sbiw	r24, 0x01	; 1
 252:	f1 f7       	brne	.-4      	; 0x250 <lcd_init+0x48>
 254:	00 c0       	rjmp	.+0      	; 0x256 <lcd_init+0x4e>
 256:	00 00       	nop
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
 258:	28 98       	cbi	0x05, 0	; 5
    lcd_e_toggle();
 25a:	0e 94 6f 00 	call	0xde	; 0xde <toggle_e>
 25e:	8f ef       	ldi	r24, 0xFF	; 255
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	01 97       	sbiw	r24, 0x01	; 1
 264:	f1 f7       	brne	.-4      	; 0x262 <lcd_init+0x5a>
 266:	00 c0       	rjmp	.+0      	; 0x268 <lcd_init+0x60>
 268:	00 00       	nop
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
 26a:	88 e2       	ldi	r24, 0x28	; 40
 26c:	0e 94 c3 00 	call	0x186	; 0x186 <lcd_command>
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
 270:	88 e0       	ldi	r24, 0x08	; 8
 272:	0e 94 c3 00 	call	0x186	; 0x186 <lcd_command>
    lcd_clrscr();                           /* display clear                */ 
 276:	0e 94 d7 00 	call	0x1ae	; 0x1ae <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
 27a:	86 e0       	ldi	r24, 0x06	; 6
 27c:	0e 94 c3 00 	call	0x186	; 0x186 <lcd_command>
    lcd_command(dispAttr);                  /* display/cursor control       */
 280:	8c 2f       	mov	r24, r28
 282:	0e 94 c3 00 	call	0x186	; 0x186 <lcd_command>

}/* lcd_init */
 286:	cf 91       	pop	r28
 288:	08 95       	ret

0000028a <main>:
#include "radio.h"


int main(void)
{
    lcd_init(LCD_DISP_ON_CURSOR);
 28a:	8e e0       	ldi	r24, 0x0E	; 14
 28c:	0e 94 04 01 	call	0x208	; 0x208 <lcd_init>
	init_shift();
 290:	0e 94 70 02 	call	0x4e0	; 0x4e0 <init_shift>
    init_radio();
 294:	0e 94 06 02 	call	0x40c	; 0x40c <init_radio>
	shift_out(0b00001111);
 298:	8f e0       	ldi	r24, 0x0F	; 15
 29a:	0e 94 74 02 	call	0x4e8	; 0x4e8 <shift_out>
	uart_init();
 29e:	0e 94 15 02 	call	0x42a	; 0x42a <uart_init>
	
	
	
	
	sei();
 2a2:	78 94       	sei
	while(1){
		comenzi_wifi();
 2a4:	0e 94 0d 03 	call	0x61a	; 0x61a <comenzi_wifi>
 2a8:	fd cf       	rjmp	.-6      	; 0x2a4 <main+0x1a>

000002aa <radio_write_reg>:
	 for (int i=0;i<12;i++)
		data[i]=TWIReadACK();
	 data[12]=TWIReadACK();
	 TWIStop();
	 return data;
 }
 2aa:	1f 93       	push	r17
 2ac:	cf 93       	push	r28
 2ae:	df 93       	push	r29
 2b0:	18 2f       	mov	r17, r24
 2b2:	d6 2f       	mov	r29, r22
 2b4:	c4 2f       	mov	r28, r20
 2b6:	0e 94 59 03 	call	0x6b2	; 0x6b2 <TWIStart>
 2ba:	82 e2       	ldi	r24, 0x22	; 34
 2bc:	0e 94 66 03 	call	0x6cc	; 0x6cc <TWIWrite>
 2c0:	81 2f       	mov	r24, r17
 2c2:	0e 94 66 03 	call	0x6cc	; 0x6cc <TWIWrite>
 2c6:	8d 2f       	mov	r24, r29
 2c8:	0e 94 66 03 	call	0x6cc	; 0x6cc <TWIWrite>
 2cc:	8c 2f       	mov	r24, r28
 2ce:	0e 94 66 03 	call	0x6cc	; 0x6cc <TWIWrite>
 2d2:	0e 94 62 03 	call	0x6c4	; 0x6c4 <TWIStop>
 2d6:	df 91       	pop	r29
 2d8:	cf 91       	pop	r28
 2da:	1f 91       	pop	r17
 2dc:	08 95       	ret

000002de <radio_freq>:
 void radio_freq(uint8_t freq){
 2de:	cf 92       	push	r12
 2e0:	df 92       	push	r13
 2e2:	ff 92       	push	r15
 2e4:	0f 93       	push	r16
 2e6:	1f 93       	push	r17
 2e8:	cf 93       	push	r28
 2ea:	df 93       	push	r29
 2ec:	cd b7       	in	r28, 0x3d	; 61
 2ee:	de b7       	in	r29, 0x3e	; 62
 2f0:	60 97       	sbiw	r28, 0x10	; 16
 2f2:	0f b6       	in	r0, 0x3f	; 63
 2f4:	f8 94       	cli
 2f6:	de bf       	out	0x3e, r29	; 62
 2f8:	0f be       	out	0x3f, r0	; 63
 2fa:	cd bf       	out	0x3d, r28	; 61
	 char text[16];
	 
	 freq=freq-870;
 2fc:	0f 2e       	mov	r0, r31
 2fe:	fa e9       	ldi	r31, 0x9A	; 154
 300:	ff 2e       	mov	r15, r31
 302:	f0 2d       	mov	r31, r0
 304:	f8 0e       	add	r15, r24
	 uint8_t freqH=freq>>2;
	 uint8_t freqL=(freq & 3) <<6;
 306:	0f 2d       	mov	r16, r15
 308:	10 e0       	ldi	r17, 0x00	; 0
	 int rez=freq;
	 sprintf(text,"%d.%d MHz",(870+rez)/10,(870+rez)%10);
 30a:	c8 01       	movw	r24, r16
 30c:	8a 59       	subi	r24, 0x9A	; 154
 30e:	9c 4f       	sbci	r25, 0xFC	; 252
 310:	6a e0       	ldi	r22, 0x0A	; 10
 312:	70 e0       	ldi	r23, 0x00	; 0
 314:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__divmodhi4>
 318:	9f 93       	push	r25
 31a:	8f 93       	push	r24
 31c:	7f 93       	push	r23
 31e:	6f 93       	push	r22
 320:	82 e0       	ldi	r24, 0x02	; 2
 322:	91 e0       	ldi	r25, 0x01	; 1
 324:	9f 93       	push	r25
 326:	8f 93       	push	r24
 328:	ce 01       	movw	r24, r28
 32a:	01 96       	adiw	r24, 0x01	; 1
 32c:	6c 01       	movw	r12, r24
 32e:	9f 93       	push	r25
 330:	8f 93       	push	r24
 332:	0e 94 cc 03 	call	0x798	; 0x798 <sprintf>
	 lcd_clrscr();
 336:	0e 94 d7 00 	call	0x1ae	; 0x1ae <lcd_clrscr>
	 lcd_home();
 33a:	0e 94 db 00 	call	0x1b6	; 0x1b6 <lcd_home>
	 lcd_puts(text);
 33e:	c6 01       	movw	r24, r12
 340:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
	 lcd_gotoxy(0,1);
 344:	61 e0       	ldi	r22, 0x01	; 1
 346:	80 e0       	ldi	r24, 0x00	; 0
 348:	0e 94 cd 00 	call	0x19a	; 0x19a <lcd_gotoxy>

	 radio_write_reg(3,freqH,freqL+0x10);
 34c:	00 24       	eor	r0, r0
 34e:	16 95       	lsr	r17
 350:	07 95       	ror	r16
 352:	07 94       	ror	r0
 354:	16 95       	lsr	r17
 356:	07 95       	ror	r16
 358:	07 94       	ror	r0
 35a:	10 2f       	mov	r17, r16
 35c:	00 2d       	mov	r16, r0
 35e:	40 e1       	ldi	r20, 0x10	; 16
 360:	40 0f       	add	r20, r16
 362:	6f 2d       	mov	r22, r15
 364:	66 95       	lsr	r22
 366:	66 95       	lsr	r22
 368:	83 e0       	ldi	r24, 0x03	; 3
 36a:	0e 94 55 01 	call	0x2aa	; 0x2aa <radio_write_reg>
 }
 36e:	0f b6       	in	r0, 0x3f	; 63
 370:	f8 94       	cli
 372:	de bf       	out	0x3e, r29	; 62
 374:	0f be       	out	0x3f, r0	; 63
 376:	cd bf       	out	0x3d, r28	; 61
 378:	60 96       	adiw	r28, 0x10	; 16
 37a:	0f b6       	in	r0, 0x3f	; 63
 37c:	f8 94       	cli
 37e:	de bf       	out	0x3e, r29	; 62
 380:	0f be       	out	0x3f, r0	; 63
 382:	cd bf       	out	0x3d, r28	; 61
 384:	df 91       	pop	r29
 386:	cf 91       	pop	r28
 388:	1f 91       	pop	r17
 38a:	0f 91       	pop	r16
 38c:	ff 90       	pop	r15
 38e:	df 90       	pop	r13
 390:	cf 90       	pop	r12
 392:	08 95       	ret

00000394 <start_write>:
 void start_write(){
	 TWIInit();
 394:	0e 94 4d 03 	call	0x69a	; 0x69a <TWIInit>
	 radio_write_reg(2,0xc0,0x03);
 398:	43 e0       	ldi	r20, 0x03	; 3
 39a:	60 ec       	ldi	r22, 0xC0	; 192
 39c:	82 e0       	ldi	r24, 0x02	; 2
 39e:	0e 94 55 01 	call	0x2aa	; 0x2aa <radio_write_reg>
	 radio_write_reg(2,0xd0,0x0d);
 3a2:	4d e0       	ldi	r20, 0x0D	; 13
 3a4:	60 ed       	ldi	r22, 0xD0	; 208
 3a6:	82 e0       	ldi	r24, 0x02	; 2
 3a8:	0e 94 55 01 	call	0x2aa	; 0x2aa <radio_write_reg>
 3ac:	08 95       	ret

000003ae <volum>:
 }
 //vol ia valori de la 0-15
 void volum(uint8_t vol){
	 if(vol>15)
	 vol=15;
	 radio_write_reg(5,0x88,vol);
 3ae:	80 31       	cpi	r24, 0x10	; 16
 3b0:	08 f0       	brcs	.+2      	; 0x3b4 <volum+0x6>
 3b2:	8f e0       	ldi	r24, 0x0F	; 15
 3b4:	48 2f       	mov	r20, r24
 3b6:	68 e8       	ldi	r22, 0x88	; 136
 3b8:	85 e0       	ldi	r24, 0x05	; 5
 3ba:	0e 94 55 01 	call	0x2aa	; 0x2aa <radio_write_reg>
 3be:	08 95       	ret

000003c0 <mute>:
 }
 void mute(){
	 radio_write_reg(2,0x00,0x0d);
 3c0:	4d e0       	ldi	r20, 0x0D	; 13
 3c2:	60 e0       	ldi	r22, 0x00	; 0
 3c4:	82 e0       	ldi	r24, 0x02	; 2
 3c6:	0e 94 55 01 	call	0x2aa	; 0x2aa <radio_write_reg>
 3ca:	08 95       	ret

000003cc <unmute>:
 }
 void unmute(){
	 radio_write_reg(2,0xd0,0x0d);
 3cc:	4d e0       	ldi	r20, 0x0D	; 13
 3ce:	60 ed       	ldi	r22, 0xD0	; 208
 3d0:	82 e0       	ldi	r24, 0x02	; 2
 3d2:	0e 94 55 01 	call	0x2aa	; 0x2aa <radio_write_reg>
 3d6:	08 95       	ret

000003d8 <set_volum>:
		case 11: vol2 =vol2-1; volum(vol2);shift_out(set_volum(vol2)); break;
		case 12: vol2 =vol2+1; volum(vol2);shift_out(set_volum(vol2)); break;
	 }
 }
 uint8_t set_volum(int a){
	 switch(a-1){
 3d8:	02 97       	sbiw	r24, 0x02	; 2
 3da:	80 31       	cpi	r24, 0x10	; 16
 3dc:	91 05       	cpc	r25, r1
 3de:	88 f4       	brcc	.+34     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3e0:	8c 5c       	subi	r24, 0xCC	; 204
 3e2:	9f 4f       	sbci	r25, 0xFF	; 255
 3e4:	fc 01       	movw	r30, r24
 3e6:	0c 94 85 03 	jmp	0x70a	; 0x70a <__tablejump2__>
		case 2: 
		case 1: return 0b00000001;
		case 3: 
		case 4: return 0b00000011;
 3ea:	83 e0       	ldi	r24, 0x03	; 3
 3ec:	08 95       	ret
		case 5:
		case 6: return 0b00000111;
		case 7:
		case 8: return 0b00001111;
 3ee:	8f e0       	ldi	r24, 0x0F	; 15
 3f0:	08 95       	ret
		case 9:
		case 10: return 0b00011111;
 3f2:	8f e1       	ldi	r24, 0x1F	; 31
 3f4:	08 95       	ret
		case 11:
		case 12: return 0b00111111;
 3f6:	8f e3       	ldi	r24, 0x3F	; 63
 3f8:	08 95       	ret
		case 13:
		case 14: return 0b01111111;
 3fa:	8f e7       	ldi	r24, 0x7F	; 127
 3fc:	08 95       	ret
		case 15:
		case 16: return 0b11111111;
 3fe:	8f ef       	ldi	r24, 0xFF	; 255
 400:	08 95       	ret
		
	 }
 }
 402:	08 95       	ret
	 }
 }
 uint8_t set_volum(int a){
	 switch(a-1){
		case 2: 
		case 1: return 0b00000001;
 404:	81 e0       	ldi	r24, 0x01	; 1
 406:	08 95       	ret
		case 3: 
		case 4: return 0b00000011;
		case 5:
		case 6: return 0b00000111;
 408:	87 e0       	ldi	r24, 0x07	; 7
		case 14: return 0b01111111;
		case 15:
		case 16: return 0b11111111;
		
	 }
 }
 40a:	08 95       	ret

0000040c <init_radio>:
 void init_radio(){
	 start_write();
 40c:	0e 94 ca 01 	call	0x394	; 0x394 <start_write>
	 vol2=0b00001000;
 410:	88 e0       	ldi	r24, 0x08	; 8
 412:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <vol2>
	 volum(vol2);
 416:	0e 94 d7 01 	call	0x3ae	; 0x3ae <volum>
	 
	 radio_freq(908);
 41a:	8c e8       	ldi	r24, 0x8C	; 140
 41c:	0e 94 6f 01 	call	0x2de	; 0x2de <radio_freq>
	 lcd_puts("Magic FM");
 420:	8c e0       	ldi	r24, 0x0C	; 12
 422:	91 e0       	ldi	r25, 0x01	; 1
 424:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
 428:	08 95       	ret

0000042a <uart_init>:
	 //mute();
 }
 void uart_init(){
	 PCICR |=(1<<PCIE1);
 42a:	e8 e6       	ldi	r30, 0x68	; 104
 42c:	f0 e0       	ldi	r31, 0x00	; 0
 42e:	80 81       	ld	r24, Z
 430:	82 60       	ori	r24, 0x02	; 2
 432:	80 83       	st	Z, r24
	 PCMSK1 |=(1<<PCINT9);
 434:	ec e6       	ldi	r30, 0x6C	; 108
 436:	f0 e0       	ldi	r31, 0x00	; 0
 438:	80 81       	ld	r24, Z
 43a:	82 60       	ori	r24, 0x02	; 2
 43c:	80 83       	st	Z, r24
	 UBRR0 = 8;
 43e:	88 e0       	ldi	r24, 0x08	; 8
 440:	90 e0       	ldi	r25, 0x00	; 0
 442:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 446:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	 UCSR0B |= (1<<RXEN0);
 44a:	e1 ec       	ldi	r30, 0xC1	; 193
 44c:	f0 e0       	ldi	r31, 0x00	; 0
 44e:	80 81       	ld	r24, Z
 450:	80 61       	ori	r24, 0x10	; 16
 452:	80 83       	st	Z, r24
 454:	08 95       	ret

00000456 <uart_receive>:
	 
 }
 unsigned char uart_receive (){
	 while (!(UCSR0A & (1<<RXC0)));
 456:	e0 ec       	ldi	r30, 0xC0	; 192
 458:	f0 e0       	ldi	r31, 0x00	; 0
 45a:	80 81       	ld	r24, Z
 45c:	88 23       	and	r24, r24
 45e:	ec f7       	brge	.-6      	; 0x45a <uart_receive+0x4>
	 return UDR0;
 460:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 }
 464:	08 95       	ret

00000466 <__vector_4>:
			 }
			 memset(str,"\0",5);
		 }
	 }
 }
 ISR(PCINT1_vect){
 466:	1f 92       	push	r1
 468:	0f 92       	push	r0
 46a:	0f b6       	in	r0, 0x3f	; 63
 46c:	0f 92       	push	r0
 46e:	11 24       	eor	r1, r1
 470:	2f 93       	push	r18
 472:	3f 93       	push	r19
 474:	4f 93       	push	r20
 476:	5f 93       	push	r21
 478:	6f 93       	push	r22
 47a:	7f 93       	push	r23
 47c:	8f 93       	push	r24
 47e:	9f 93       	push	r25
 480:	af 93       	push	r26
 482:	bf 93       	push	r27
 484:	ef 93       	push	r30
 486:	ff 93       	push	r31
	 cli();
 488:	f8 94       	cli
	 if(PINC & (1<<PINC1)){
 48a:	31 9b       	sbis	0x06, 1	; 6
 48c:	17 c0       	rjmp	.+46     	; 0x4bc <__vector_4+0x56>
		 if( verif == 0 ){
 48e:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <verif>
 492:	90 91 89 01 	lds	r25, 0x0189	; 0x800189 <verif+0x1>
 496:	00 97       	sbiw	r24, 0x00	; 0
 498:	49 f4       	brne	.+18     	; 0x4ac <__vector_4+0x46>
			 unmute();
 49a:	0e 94 e6 01 	call	0x3cc	; 0x3cc <unmute>
			 verif=1;
 49e:	81 e0       	ldi	r24, 0x01	; 1
 4a0:	90 e0       	ldi	r25, 0x00	; 0
 4a2:	90 93 89 01 	sts	0x0189, r25	; 0x800189 <verif+0x1>
 4a6:	80 93 88 01 	sts	0x0188, r24	; 0x800188 <verif>
 4aa:	08 c0       	rjmp	.+16     	; 0x4bc <__vector_4+0x56>
		 }else
		 if( verif == 1 ){
 4ac:	01 97       	sbiw	r24, 0x01	; 1
 4ae:	31 f4       	brne	.+12     	; 0x4bc <__vector_4+0x56>
			 mute();
 4b0:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <mute>
			 verif=0;
 4b4:	10 92 89 01 	sts	0x0189, r1	; 0x800189 <verif+0x1>
 4b8:	10 92 88 01 	sts	0x0188, r1	; 0x800188 <verif>
		 }
	 }
	 sei();
 4bc:	78 94       	sei
 }
 4be:	ff 91       	pop	r31
 4c0:	ef 91       	pop	r30
 4c2:	bf 91       	pop	r27
 4c4:	af 91       	pop	r26
 4c6:	9f 91       	pop	r25
 4c8:	8f 91       	pop	r24
 4ca:	7f 91       	pop	r23
 4cc:	6f 91       	pop	r22
 4ce:	5f 91       	pop	r21
 4d0:	4f 91       	pop	r20
 4d2:	3f 91       	pop	r19
 4d4:	2f 91       	pop	r18
 4d6:	0f 90       	pop	r0
 4d8:	0f be       	out	0x3f, r0	; 63
 4da:	0f 90       	pop	r0
 4dc:	1f 90       	pop	r1
 4de:	18 95       	reti

000004e0 <init_shift>:
 
 void init_shift(){
	 DDRC |= (1<<PC0) | (1<<PC2) | (1<<PC3);
 4e0:	87 b1       	in	r24, 0x07	; 7
 4e2:	8d 60       	ori	r24, 0x0D	; 13
 4e4:	87 b9       	out	0x07, r24	; 7
 4e6:	08 95       	ret

000004e8 <shift_out>:
 }
 
 void shift_out(uint8_t shift){
 4e8:	28 e0       	ldi	r18, 0x08	; 8
	 uint8_t i;
	 for(i=0;i<8;i++){
		PORTC &= ~(1<<PC0);
 4ea:	40 98       	cbi	0x08, 0	; 8
		PORTC &= ~(1<<PC2);
 4ec:	42 98       	cbi	0x08, 2	; 8
		
		PORTC |= ((1 & shift)<<PC0);
 4ee:	98 b1       	in	r25, 0x08	; 8
 4f0:	38 2f       	mov	r19, r24
 4f2:	31 70       	andi	r19, 0x01	; 1
 4f4:	93 2b       	or	r25, r19
 4f6:	98 b9       	out	0x08, r25	; 8
		shift>>=1;
 4f8:	86 95       	lsr	r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4fa:	ef e9       	ldi	r30, 0x9F	; 159
 4fc:	ff e0       	ldi	r31, 0x0F	; 15
 4fe:	31 97       	sbiw	r30, 0x01	; 1
 500:	f1 f7       	brne	.-4      	; 0x4fe <shift_out+0x16>
 502:	00 c0       	rjmp	.+0      	; 0x504 <shift_out+0x1c>
 504:	00 00       	nop
		
		_delay_ms(1);
		PORTC |= (1<<PC2);
 506:	42 9a       	sbi	0x08, 2	; 8
 508:	ef e9       	ldi	r30, 0x9F	; 159
 50a:	ff e0       	ldi	r31, 0x0F	; 15
 50c:	31 97       	sbiw	r30, 0x01	; 1
 50e:	f1 f7       	brne	.-4      	; 0x50c <shift_out+0x24>
 510:	00 c0       	rjmp	.+0      	; 0x512 <shift_out+0x2a>
 512:	00 00       	nop
 514:	21 50       	subi	r18, 0x01	; 1
	 DDRC |= (1<<PC0) | (1<<PC2) | (1<<PC3);
 }
 
 void shift_out(uint8_t shift){
	 uint8_t i;
	 for(i=0;i<8;i++){
 516:	49 f7       	brne	.-46     	; 0x4ea <shift_out+0x2>
		_delay_ms(1);
		
	 }
	 
	 
	 PORTC |= (1<<PC3);
 518:	43 9a       	sbi	0x08, 3	; 8
 51a:	8f e9       	ldi	r24, 0x9F	; 159
 51c:	9f e0       	ldi	r25, 0x0F	; 15
 51e:	01 97       	sbiw	r24, 0x01	; 1
 520:	f1 f7       	brne	.-4      	; 0x51e <shift_out+0x36>
 522:	00 c0       	rjmp	.+0      	; 0x524 <shift_out+0x3c>
 524:	00 00       	nop
	 _delay_ms(1);
	 PORTC &= ~(1<<PC3);
 526:	43 98       	cbi	0x08, 3	; 8
 528:	08 95       	ret

0000052a <select_radio>:
 }
 void unmute(){
	 radio_write_reg(2,0xd0,0x0d);
 }
 void select_radio(int nr){
	 switch(nr){
 52a:	01 97       	sbiw	r24, 0x01	; 1
 52c:	8c 30       	cpi	r24, 0x0C	; 12
 52e:	91 05       	cpc	r25, r1
 530:	08 f0       	brcs	.+2      	; 0x534 <select_radio+0xa>
 532:	72 c0       	rjmp	.+228    	; 0x618 <select_radio+0xee>
 534:	8c 5b       	subi	r24, 0xBC	; 188
 536:	9f 4f       	sbci	r25, 0xFF	; 255
 538:	fc 01       	movw	r30, r24
 53a:	0c 94 85 03 	jmp	0x70a	; 0x70a <__tablejump2__>
		case 1:  radio_freq(890); lcd_puts("Radio ZU"); break;
 53e:	8a e7       	ldi	r24, 0x7A	; 122
 540:	0e 94 6f 01 	call	0x2de	; 0x2de <radio_freq>
 544:	85 e1       	ldi	r24, 0x15	; 21
 546:	91 e0       	ldi	r25, 0x01	; 1
 548:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
 54c:	08 95       	ret
		case 2:  radio_freq(908); lcd_puts("Magic FM"); break;
 54e:	8c e8       	ldi	r24, 0x8C	; 140
 550:	0e 94 6f 01 	call	0x2de	; 0x2de <radio_freq>
 554:	8c e0       	ldi	r24, 0x0C	; 12
 556:	91 e0       	ldi	r25, 0x01	; 1
 558:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
 55c:	08 95       	ret
		case 3:  radio_freq(983); lcd_puts("Radio Romania"); break;
 55e:	87 ed       	ldi	r24, 0xD7	; 215
 560:	0e 94 6f 01 	call	0x2de	; 0x2de <radio_freq>
 564:	8e e1       	ldi	r24, 0x1E	; 30
 566:	91 e0       	ldi	r25, 0x01	; 1
 568:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
 56c:	08 95       	ret
		case 4:  radio_freq(1053); lcd_puts("R. Actualitati"); break;
 56e:	8d e1       	ldi	r24, 0x1D	; 29
 570:	0e 94 6f 01 	call	0x2de	; 0x2de <radio_freq>
 574:	8c e2       	ldi	r24, 0x2C	; 44
 576:	91 e0       	ldi	r25, 0x01	; 1
 578:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
 57c:	08 95       	ret
		case 5:  radio_freq(961); lcd_puts("Kiss FM"); break;
 57e:	81 ec       	ldi	r24, 0xC1	; 193
 580:	0e 94 6f 01 	call	0x2de	; 0x2de <radio_freq>
 584:	8b e3       	ldi	r24, 0x3B	; 59
 586:	91 e0       	ldi	r25, 0x01	; 1
 588:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
 58c:	08 95       	ret
		case 6:  radio_freq(1067); lcd_puts("Radio Europa FM"); break;
 58e:	8b e2       	ldi	r24, 0x2B	; 43
 590:	0e 94 6f 01 	call	0x2de	; 0x2de <radio_freq>
 594:	83 e4       	ldi	r24, 0x43	; 67
 596:	91 e0       	ldi	r25, 0x01	; 1
 598:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
 59c:	08 95       	ret
		case 7:  radio_freq(1019); lcd_puts("Romantic FM"); break;
 59e:	8b ef       	ldi	r24, 0xFB	; 251
 5a0:	0e 94 6f 01 	call	0x2de	; 0x2de <radio_freq>
 5a4:	83 e5       	ldi	r24, 0x53	; 83
 5a6:	91 e0       	ldi	r25, 0x01	; 1
 5a8:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
 5ac:	08 95       	ret
		case 8:  radio_freq(1006); lcd_puts("Rock FM"); break;
 5ae:	8e ee       	ldi	r24, 0xEE	; 238
 5b0:	0e 94 6f 01 	call	0x2de	; 0x2de <radio_freq>
 5b4:	8f e5       	ldi	r24, 0x5F	; 95
 5b6:	91 e0       	ldi	r25, 0x01	; 1
 5b8:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
 5bc:	08 95       	ret
		case 9:  radio_freq(1048); lcd_puts("Radio Muzical"); break;
 5be:	88 e1       	ldi	r24, 0x18	; 24
 5c0:	0e 94 6f 01 	call	0x2de	; 0x2de <radio_freq>
 5c4:	87 e6       	ldi	r24, 0x67	; 103
 5c6:	91 e0       	ldi	r25, 0x01	; 1
 5c8:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
 5cc:	08 95       	ret
		case 10: radio_freq(1034); lcd_puts("Radio 7"); break;
 5ce:	8a e0       	ldi	r24, 0x0A	; 10
 5d0:	0e 94 6f 01 	call	0x2de	; 0x2de <radio_freq>
 5d4:	85 e7       	ldi	r24, 0x75	; 117
 5d6:	91 e0       	ldi	r25, 0x01	; 1
 5d8:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
 5dc:	08 95       	ret
		case 11: vol2 =vol2-1; volum(vol2);shift_out(set_volum(vol2)); break;
 5de:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <vol2>
 5e2:	81 50       	subi	r24, 0x01	; 1
 5e4:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <vol2>
 5e8:	0e 94 d7 01 	call	0x3ae	; 0x3ae <volum>
 5ec:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <vol2>
 5f0:	90 e0       	ldi	r25, 0x00	; 0
 5f2:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <set_volum>
 5f6:	0e 94 74 02 	call	0x4e8	; 0x4e8 <shift_out>
 5fa:	08 95       	ret
		case 12: vol2 =vol2+1; volum(vol2);shift_out(set_volum(vol2)); break;
 5fc:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <vol2>
 600:	8f 5f       	subi	r24, 0xFF	; 255
 602:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <vol2>
 606:	0e 94 d7 01 	call	0x3ae	; 0x3ae <volum>
 60a:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <vol2>
 60e:	90 e0       	ldi	r25, 0x00	; 0
 610:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <set_volum>
 614:	0e 94 74 02 	call	0x4e8	; 0x4e8 <shift_out>
 618:	08 95       	ret

0000061a <comenzi_wifi>:
 }
 void comenzi_wifi(){
	 static int i,ok;
	 static char str[6];
	 unsigned char c;
	 c = uart_receive();
 61a:	0e 94 2b 02 	call	0x456	; 0x456 <uart_receive>
	 if(c!='$'){
 61e:	84 32       	cpi	r24, 0x24	; 36
 620:	99 f0       	breq	.+38     	; 0x648 <comenzi_wifi+0x2e>
		 str[i]=c;
 622:	20 91 86 01 	lds	r18, 0x0186	; 0x800186 <i.2519>
 626:	30 91 87 01 	lds	r19, 0x0187	; 0x800187 <i.2519+0x1>
 62a:	f9 01       	movw	r30, r18
 62c:	e0 58       	subi	r30, 0x80	; 128
 62e:	fe 4f       	sbci	r31, 0xFE	; 254
 630:	80 83       	st	Z, r24
		 i++;
 632:	2f 5f       	subi	r18, 0xFF	; 255
 634:	3f 4f       	sbci	r19, 0xFF	; 255
 636:	30 93 87 01 	sts	0x0187, r19	; 0x800187 <i.2519+0x1>
 63a:	20 93 86 01 	sts	0x0186, r18	; 0x800186 <i.2519>
		 ok=0;
 63e:	10 92 7f 01 	sts	0x017F, r1	; 0x80017f <__data_end+0x1>
 642:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <__data_end>
 646:	08 95       	ret
	 }
	 else{
		 if(ok==0){
 648:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <__data_end>
 64c:	90 91 7f 01 	lds	r25, 0x017F	; 0x80017f <__data_end+0x1>
 650:	89 2b       	or	r24, r25
 652:	11 f5       	brne	.+68     	; 0x698 <comenzi_wifi+0x7e>
			 ok=1;
 654:	81 e0       	ldi	r24, 0x01	; 1
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	90 93 7f 01 	sts	0x017F, r25	; 0x80017f <__data_end+0x1>
 65c:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <__data_end>
			 i=0;
 660:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <i.2519+0x1>
 664:	10 92 86 01 	sts	0x0186, r1	; 0x800186 <i.2519>
			 if(strlen(str)<3){
 668:	e0 e8       	ldi	r30, 0x80	; 128
 66a:	f1 e0       	ldi	r31, 0x01	; 1
 66c:	01 90       	ld	r0, Z+
 66e:	00 20       	and	r0, r0
 670:	e9 f7       	brne	.-6      	; 0x66c <comenzi_wifi+0x52>
 672:	31 97       	sbiw	r30, 0x01	; 1
 674:	e0 58       	subi	r30, 0x80	; 128
 676:	f1 40       	sbci	r31, 0x01	; 1
 678:	33 97       	sbiw	r30, 0x03	; 3
 67a:	30 f4       	brcc	.+12     	; 0x688 <comenzi_wifi+0x6e>
				 int nr;
				 nr=atoi(str);
 67c:	80 e8       	ldi	r24, 0x80	; 128
 67e:	91 e0       	ldi	r25, 0x01	; 1
 680:	0e 94 9f 03 	call	0x73e	; 0x73e <atoi>
				 select_radio(nr);
 684:	0e 94 95 02 	call	0x52a	; 0x52a <select_radio>
			 }
			 memset(str,"\0",5);
 688:	45 e0       	ldi	r20, 0x05	; 5
 68a:	50 e0       	ldi	r21, 0x00	; 0
 68c:	60 e0       	ldi	r22, 0x00	; 0
 68e:	71 e0       	ldi	r23, 0x01	; 1
 690:	80 e8       	ldi	r24, 0x80	; 128
 692:	91 e0       	ldi	r25, 0x01	; 1
 694:	0e 94 bd 03 	call	0x77a	; 0x77a <memset>
 698:	08 95       	ret

0000069a <TWIInit>:
 #include <inttypes.h>
 #include <avr/io.h>

 void TWIInit(void)
 {
	DDRC |= (1<<PC5) | (1<<PC4);
 69a:	87 b1       	in	r24, 0x07	; 7
 69c:	80 63       	ori	r24, 0x30	; 48
 69e:	87 b9       	out	0x07, r24	; 7
	 //set SCL to 400kHz
	 TWSR = 0x00;
 6a0:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	 TWBR = 0x30;
 6a4:	80 e3       	ldi	r24, 0x30	; 48
 6a6:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
	 //enable TWI
	 TWCR = (1<<TWEN);
 6aa:	84 e0       	ldi	r24, 0x04	; 4
 6ac:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 6b0:	08 95       	ret

000006b2 <TWIStart>:
 }


 void TWIStart(void)
 {
	 TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);
 6b2:	84 ea       	ldi	r24, 0xA4	; 164
 6b4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	 while ((TWCR & (1<<TWINT)) == 0);
 6b8:	ec eb       	ldi	r30, 0xBC	; 188
 6ba:	f0 e0       	ldi	r31, 0x00	; 0
 6bc:	80 81       	ld	r24, Z
 6be:	88 23       	and	r24, r24
 6c0:	ec f7       	brge	.-6      	; 0x6bc <TWIStart+0xa>
 }
 6c2:	08 95       	ret

000006c4 <TWIStop>:
 //send stop signal
 void TWIStop(void)
 {
	 TWCR = (1<<TWINT)|(1<<TWSTO)|(1<<TWEN);
 6c4:	84 e9       	ldi	r24, 0x94	; 148
 6c6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 6ca:	08 95       	ret

000006cc <TWIWrite>:
 }

 void TWIWrite(uint8_t u8data)
 {
	 TWDR = u8data;
 6cc:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	 TWCR = (1<<TWINT)|(1<<TWEN);
 6d0:	84 e8       	ldi	r24, 0x84	; 132
 6d2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	 while ((TWCR & (1<<TWINT)) == 0);
 6d6:	ec eb       	ldi	r30, 0xBC	; 188
 6d8:	f0 e0       	ldi	r31, 0x00	; 0
 6da:	80 81       	ld	r24, Z
 6dc:	88 23       	and	r24, r24
 6de:	ec f7       	brge	.-6      	; 0x6da <TWIWrite+0xe>
 }
 6e0:	08 95       	ret

000006e2 <__divmodhi4>:
 6e2:	97 fb       	bst	r25, 7
 6e4:	07 2e       	mov	r0, r23
 6e6:	16 f4       	brtc	.+4      	; 0x6ec <__divmodhi4+0xa>
 6e8:	00 94       	com	r0
 6ea:	07 d0       	rcall	.+14     	; 0x6fa <__divmodhi4_neg1>
 6ec:	77 fd       	sbrc	r23, 7
 6ee:	09 d0       	rcall	.+18     	; 0x702 <__divmodhi4_neg2>
 6f0:	0e 94 8b 03 	call	0x716	; 0x716 <__udivmodhi4>
 6f4:	07 fc       	sbrc	r0, 7
 6f6:	05 d0       	rcall	.+10     	; 0x702 <__divmodhi4_neg2>
 6f8:	3e f4       	brtc	.+14     	; 0x708 <__divmodhi4_exit>

000006fa <__divmodhi4_neg1>:
 6fa:	90 95       	com	r25
 6fc:	81 95       	neg	r24
 6fe:	9f 4f       	sbci	r25, 0xFF	; 255
 700:	08 95       	ret

00000702 <__divmodhi4_neg2>:
 702:	70 95       	com	r23
 704:	61 95       	neg	r22
 706:	7f 4f       	sbci	r23, 0xFF	; 255

00000708 <__divmodhi4_exit>:
 708:	08 95       	ret

0000070a <__tablejump2__>:
 70a:	ee 0f       	add	r30, r30
 70c:	ff 1f       	adc	r31, r31
 70e:	05 90       	lpm	r0, Z+
 710:	f4 91       	lpm	r31, Z
 712:	e0 2d       	mov	r30, r0
 714:	09 94       	ijmp

00000716 <__udivmodhi4>:
 716:	aa 1b       	sub	r26, r26
 718:	bb 1b       	sub	r27, r27
 71a:	51 e1       	ldi	r21, 0x11	; 17
 71c:	07 c0       	rjmp	.+14     	; 0x72c <__udivmodhi4_ep>

0000071e <__udivmodhi4_loop>:
 71e:	aa 1f       	adc	r26, r26
 720:	bb 1f       	adc	r27, r27
 722:	a6 17       	cp	r26, r22
 724:	b7 07       	cpc	r27, r23
 726:	10 f0       	brcs	.+4      	; 0x72c <__udivmodhi4_ep>
 728:	a6 1b       	sub	r26, r22
 72a:	b7 0b       	sbc	r27, r23

0000072c <__udivmodhi4_ep>:
 72c:	88 1f       	adc	r24, r24
 72e:	99 1f       	adc	r25, r25
 730:	5a 95       	dec	r21
 732:	a9 f7       	brne	.-22     	; 0x71e <__udivmodhi4_loop>
 734:	80 95       	com	r24
 736:	90 95       	com	r25
 738:	bc 01       	movw	r22, r24
 73a:	cd 01       	movw	r24, r26
 73c:	08 95       	ret

0000073e <atoi>:
 73e:	fc 01       	movw	r30, r24
 740:	88 27       	eor	r24, r24
 742:	99 27       	eor	r25, r25
 744:	e8 94       	clt
 746:	21 91       	ld	r18, Z+
 748:	20 32       	cpi	r18, 0x20	; 32
 74a:	e9 f3       	breq	.-6      	; 0x746 <atoi+0x8>
 74c:	29 30       	cpi	r18, 0x09	; 9
 74e:	10 f0       	brcs	.+4      	; 0x754 <atoi+0x16>
 750:	2e 30       	cpi	r18, 0x0E	; 14
 752:	c8 f3       	brcs	.-14     	; 0x746 <atoi+0x8>
 754:	2b 32       	cpi	r18, 0x2B	; 43
 756:	41 f0       	breq	.+16     	; 0x768 <atoi+0x2a>
 758:	2d 32       	cpi	r18, 0x2D	; 45
 75a:	39 f4       	brne	.+14     	; 0x76a <atoi+0x2c>
 75c:	68 94       	set
 75e:	04 c0       	rjmp	.+8      	; 0x768 <atoi+0x2a>
 760:	0e 94 c4 03 	call	0x788	; 0x788 <__mulhi_const_10>
 764:	82 0f       	add	r24, r18
 766:	91 1d       	adc	r25, r1
 768:	21 91       	ld	r18, Z+
 76a:	20 53       	subi	r18, 0x30	; 48
 76c:	2a 30       	cpi	r18, 0x0A	; 10
 76e:	c0 f3       	brcs	.-16     	; 0x760 <atoi+0x22>
 770:	1e f4       	brtc	.+6      	; 0x778 <atoi+0x3a>
 772:	90 95       	com	r25
 774:	81 95       	neg	r24
 776:	9f 4f       	sbci	r25, 0xFF	; 255
 778:	08 95       	ret

0000077a <memset>:
 77a:	dc 01       	movw	r26, r24
 77c:	01 c0       	rjmp	.+2      	; 0x780 <memset+0x6>
 77e:	6d 93       	st	X+, r22
 780:	41 50       	subi	r20, 0x01	; 1
 782:	50 40       	sbci	r21, 0x00	; 0
 784:	e0 f7       	brcc	.-8      	; 0x77e <memset+0x4>
 786:	08 95       	ret

00000788 <__mulhi_const_10>:
 788:	7a e0       	ldi	r23, 0x0A	; 10
 78a:	97 9f       	mul	r25, r23
 78c:	90 2d       	mov	r25, r0
 78e:	87 9f       	mul	r24, r23
 790:	80 2d       	mov	r24, r0
 792:	91 0d       	add	r25, r1
 794:	11 24       	eor	r1, r1
 796:	08 95       	ret

00000798 <sprintf>:
 798:	ae e0       	ldi	r26, 0x0E	; 14
 79a:	b0 e0       	ldi	r27, 0x00	; 0
 79c:	e2 ed       	ldi	r30, 0xD2	; 210
 79e:	f3 e0       	ldi	r31, 0x03	; 3
 7a0:	0c 94 8d 06 	jmp	0xd1a	; 0xd1a <__prologue_saves__+0x1c>
 7a4:	0d 89       	ldd	r16, Y+21	; 0x15
 7a6:	1e 89       	ldd	r17, Y+22	; 0x16
 7a8:	86 e0       	ldi	r24, 0x06	; 6
 7aa:	8c 83       	std	Y+4, r24	; 0x04
 7ac:	1a 83       	std	Y+2, r17	; 0x02
 7ae:	09 83       	std	Y+1, r16	; 0x01
 7b0:	8f ef       	ldi	r24, 0xFF	; 255
 7b2:	9f e7       	ldi	r25, 0x7F	; 127
 7b4:	9e 83       	std	Y+6, r25	; 0x06
 7b6:	8d 83       	std	Y+5, r24	; 0x05
 7b8:	ae 01       	movw	r20, r28
 7ba:	47 5e       	subi	r20, 0xE7	; 231
 7bc:	5f 4f       	sbci	r21, 0xFF	; 255
 7be:	6f 89       	ldd	r22, Y+23	; 0x17
 7c0:	78 8d       	ldd	r23, Y+24	; 0x18
 7c2:	ce 01       	movw	r24, r28
 7c4:	01 96       	adiw	r24, 0x01	; 1
 7c6:	0e 94 ee 03 	call	0x7dc	; 0x7dc <vfprintf>
 7ca:	ef 81       	ldd	r30, Y+7	; 0x07
 7cc:	f8 85       	ldd	r31, Y+8	; 0x08
 7ce:	e0 0f       	add	r30, r16
 7d0:	f1 1f       	adc	r31, r17
 7d2:	10 82       	st	Z, r1
 7d4:	2e 96       	adiw	r28, 0x0e	; 14
 7d6:	e4 e0       	ldi	r30, 0x04	; 4
 7d8:	0c 94 a9 06 	jmp	0xd52	; 0xd52 <__epilogue_restores__+0x1c>

000007dc <vfprintf>:
 7dc:	ab e0       	ldi	r26, 0x0B	; 11
 7de:	b0 e0       	ldi	r27, 0x00	; 0
 7e0:	e4 ef       	ldi	r30, 0xF4	; 244
 7e2:	f3 e0       	ldi	r31, 0x03	; 3
 7e4:	0c 94 7f 06 	jmp	0xcfe	; 0xcfe <__prologue_saves__>
 7e8:	6c 01       	movw	r12, r24
 7ea:	7b 01       	movw	r14, r22
 7ec:	8a 01       	movw	r16, r20
 7ee:	fc 01       	movw	r30, r24
 7f0:	17 82       	std	Z+7, r1	; 0x07
 7f2:	16 82       	std	Z+6, r1	; 0x06
 7f4:	83 81       	ldd	r24, Z+3	; 0x03
 7f6:	81 ff       	sbrs	r24, 1
 7f8:	cc c1       	rjmp	.+920    	; 0xb92 <__stack+0x293>
 7fa:	ce 01       	movw	r24, r28
 7fc:	01 96       	adiw	r24, 0x01	; 1
 7fe:	3c 01       	movw	r6, r24
 800:	f6 01       	movw	r30, r12
 802:	93 81       	ldd	r25, Z+3	; 0x03
 804:	f7 01       	movw	r30, r14
 806:	93 fd       	sbrc	r25, 3
 808:	85 91       	lpm	r24, Z+
 80a:	93 ff       	sbrs	r25, 3
 80c:	81 91       	ld	r24, Z+
 80e:	7f 01       	movw	r14, r30
 810:	88 23       	and	r24, r24
 812:	09 f4       	brne	.+2      	; 0x816 <vfprintf+0x3a>
 814:	ba c1       	rjmp	.+884    	; 0xb8a <__stack+0x28b>
 816:	85 32       	cpi	r24, 0x25	; 37
 818:	39 f4       	brne	.+14     	; 0x828 <vfprintf+0x4c>
 81a:	93 fd       	sbrc	r25, 3
 81c:	85 91       	lpm	r24, Z+
 81e:	93 ff       	sbrs	r25, 3
 820:	81 91       	ld	r24, Z+
 822:	7f 01       	movw	r14, r30
 824:	85 32       	cpi	r24, 0x25	; 37
 826:	29 f4       	brne	.+10     	; 0x832 <vfprintf+0x56>
 828:	b6 01       	movw	r22, r12
 82a:	90 e0       	ldi	r25, 0x00	; 0
 82c:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 830:	e7 cf       	rjmp	.-50     	; 0x800 <vfprintf+0x24>
 832:	91 2c       	mov	r9, r1
 834:	21 2c       	mov	r2, r1
 836:	31 2c       	mov	r3, r1
 838:	ff e1       	ldi	r31, 0x1F	; 31
 83a:	f3 15       	cp	r31, r3
 83c:	d8 f0       	brcs	.+54     	; 0x874 <vfprintf+0x98>
 83e:	8b 32       	cpi	r24, 0x2B	; 43
 840:	79 f0       	breq	.+30     	; 0x860 <vfprintf+0x84>
 842:	38 f4       	brcc	.+14     	; 0x852 <vfprintf+0x76>
 844:	80 32       	cpi	r24, 0x20	; 32
 846:	79 f0       	breq	.+30     	; 0x866 <vfprintf+0x8a>
 848:	83 32       	cpi	r24, 0x23	; 35
 84a:	a1 f4       	brne	.+40     	; 0x874 <vfprintf+0x98>
 84c:	23 2d       	mov	r18, r3
 84e:	20 61       	ori	r18, 0x10	; 16
 850:	1d c0       	rjmp	.+58     	; 0x88c <vfprintf+0xb0>
 852:	8d 32       	cpi	r24, 0x2D	; 45
 854:	61 f0       	breq	.+24     	; 0x86e <vfprintf+0x92>
 856:	80 33       	cpi	r24, 0x30	; 48
 858:	69 f4       	brne	.+26     	; 0x874 <vfprintf+0x98>
 85a:	23 2d       	mov	r18, r3
 85c:	21 60       	ori	r18, 0x01	; 1
 85e:	16 c0       	rjmp	.+44     	; 0x88c <vfprintf+0xb0>
 860:	83 2d       	mov	r24, r3
 862:	82 60       	ori	r24, 0x02	; 2
 864:	38 2e       	mov	r3, r24
 866:	e3 2d       	mov	r30, r3
 868:	e4 60       	ori	r30, 0x04	; 4
 86a:	3e 2e       	mov	r3, r30
 86c:	2a c0       	rjmp	.+84     	; 0x8c2 <vfprintf+0xe6>
 86e:	f3 2d       	mov	r31, r3
 870:	f8 60       	ori	r31, 0x08	; 8
 872:	1d c0       	rjmp	.+58     	; 0x8ae <vfprintf+0xd2>
 874:	37 fc       	sbrc	r3, 7
 876:	2d c0       	rjmp	.+90     	; 0x8d2 <vfprintf+0xf6>
 878:	20 ed       	ldi	r18, 0xD0	; 208
 87a:	28 0f       	add	r18, r24
 87c:	2a 30       	cpi	r18, 0x0A	; 10
 87e:	40 f0       	brcs	.+16     	; 0x890 <vfprintf+0xb4>
 880:	8e 32       	cpi	r24, 0x2E	; 46
 882:	b9 f4       	brne	.+46     	; 0x8b2 <vfprintf+0xd6>
 884:	36 fc       	sbrc	r3, 6
 886:	81 c1       	rjmp	.+770    	; 0xb8a <__stack+0x28b>
 888:	23 2d       	mov	r18, r3
 88a:	20 64       	ori	r18, 0x40	; 64
 88c:	32 2e       	mov	r3, r18
 88e:	19 c0       	rjmp	.+50     	; 0x8c2 <vfprintf+0xe6>
 890:	36 fe       	sbrs	r3, 6
 892:	06 c0       	rjmp	.+12     	; 0x8a0 <vfprintf+0xc4>
 894:	8a e0       	ldi	r24, 0x0A	; 10
 896:	98 9e       	mul	r9, r24
 898:	20 0d       	add	r18, r0
 89a:	11 24       	eor	r1, r1
 89c:	92 2e       	mov	r9, r18
 89e:	11 c0       	rjmp	.+34     	; 0x8c2 <vfprintf+0xe6>
 8a0:	ea e0       	ldi	r30, 0x0A	; 10
 8a2:	2e 9e       	mul	r2, r30
 8a4:	20 0d       	add	r18, r0
 8a6:	11 24       	eor	r1, r1
 8a8:	22 2e       	mov	r2, r18
 8aa:	f3 2d       	mov	r31, r3
 8ac:	f0 62       	ori	r31, 0x20	; 32
 8ae:	3f 2e       	mov	r3, r31
 8b0:	08 c0       	rjmp	.+16     	; 0x8c2 <vfprintf+0xe6>
 8b2:	8c 36       	cpi	r24, 0x6C	; 108
 8b4:	21 f4       	brne	.+8      	; 0x8be <vfprintf+0xe2>
 8b6:	83 2d       	mov	r24, r3
 8b8:	80 68       	ori	r24, 0x80	; 128
 8ba:	38 2e       	mov	r3, r24
 8bc:	02 c0       	rjmp	.+4      	; 0x8c2 <vfprintf+0xe6>
 8be:	88 36       	cpi	r24, 0x68	; 104
 8c0:	41 f4       	brne	.+16     	; 0x8d2 <vfprintf+0xf6>
 8c2:	f7 01       	movw	r30, r14
 8c4:	93 fd       	sbrc	r25, 3
 8c6:	85 91       	lpm	r24, Z+
 8c8:	93 ff       	sbrs	r25, 3
 8ca:	81 91       	ld	r24, Z+
 8cc:	7f 01       	movw	r14, r30
 8ce:	81 11       	cpse	r24, r1
 8d0:	b3 cf       	rjmp	.-154    	; 0x838 <vfprintf+0x5c>
 8d2:	98 2f       	mov	r25, r24
 8d4:	9f 7d       	andi	r25, 0xDF	; 223
 8d6:	95 54       	subi	r25, 0x45	; 69
 8d8:	93 30       	cpi	r25, 0x03	; 3
 8da:	28 f4       	brcc	.+10     	; 0x8e6 <vfprintf+0x10a>
 8dc:	0c 5f       	subi	r16, 0xFC	; 252
 8de:	1f 4f       	sbci	r17, 0xFF	; 255
 8e0:	9f e3       	ldi	r25, 0x3F	; 63
 8e2:	99 83       	std	Y+1, r25	; 0x01
 8e4:	0d c0       	rjmp	.+26     	; 0x900 <__stack+0x1>
 8e6:	83 36       	cpi	r24, 0x63	; 99
 8e8:	31 f0       	breq	.+12     	; 0x8f6 <vfprintf+0x11a>
 8ea:	83 37       	cpi	r24, 0x73	; 115
 8ec:	71 f0       	breq	.+28     	; 0x90a <__stack+0xb>
 8ee:	83 35       	cpi	r24, 0x53	; 83
 8f0:	09 f0       	breq	.+2      	; 0x8f4 <vfprintf+0x118>
 8f2:	59 c0       	rjmp	.+178    	; 0x9a6 <__stack+0xa7>
 8f4:	21 c0       	rjmp	.+66     	; 0x938 <__stack+0x39>
 8f6:	f8 01       	movw	r30, r16
 8f8:	80 81       	ld	r24, Z
 8fa:	89 83       	std	Y+1, r24	; 0x01
 8fc:	0e 5f       	subi	r16, 0xFE	; 254
 8fe:	1f 4f       	sbci	r17, 0xFF	; 255
 900:	88 24       	eor	r8, r8
 902:	83 94       	inc	r8
 904:	91 2c       	mov	r9, r1
 906:	53 01       	movw	r10, r6
 908:	13 c0       	rjmp	.+38     	; 0x930 <__stack+0x31>
 90a:	28 01       	movw	r4, r16
 90c:	f2 e0       	ldi	r31, 0x02	; 2
 90e:	4f 0e       	add	r4, r31
 910:	51 1c       	adc	r5, r1
 912:	f8 01       	movw	r30, r16
 914:	a0 80       	ld	r10, Z
 916:	b1 80       	ldd	r11, Z+1	; 0x01
 918:	36 fe       	sbrs	r3, 6
 91a:	03 c0       	rjmp	.+6      	; 0x922 <__stack+0x23>
 91c:	69 2d       	mov	r22, r9
 91e:	70 e0       	ldi	r23, 0x00	; 0
 920:	02 c0       	rjmp	.+4      	; 0x926 <__stack+0x27>
 922:	6f ef       	ldi	r22, 0xFF	; 255
 924:	7f ef       	ldi	r23, 0xFF	; 255
 926:	c5 01       	movw	r24, r10
 928:	0e 94 da 05 	call	0xbb4	; 0xbb4 <strnlen>
 92c:	4c 01       	movw	r8, r24
 92e:	82 01       	movw	r16, r4
 930:	f3 2d       	mov	r31, r3
 932:	ff 77       	andi	r31, 0x7F	; 127
 934:	3f 2e       	mov	r3, r31
 936:	16 c0       	rjmp	.+44     	; 0x964 <__stack+0x65>
 938:	28 01       	movw	r4, r16
 93a:	22 e0       	ldi	r18, 0x02	; 2
 93c:	42 0e       	add	r4, r18
 93e:	51 1c       	adc	r5, r1
 940:	f8 01       	movw	r30, r16
 942:	a0 80       	ld	r10, Z
 944:	b1 80       	ldd	r11, Z+1	; 0x01
 946:	36 fe       	sbrs	r3, 6
 948:	03 c0       	rjmp	.+6      	; 0x950 <__stack+0x51>
 94a:	69 2d       	mov	r22, r9
 94c:	70 e0       	ldi	r23, 0x00	; 0
 94e:	02 c0       	rjmp	.+4      	; 0x954 <__stack+0x55>
 950:	6f ef       	ldi	r22, 0xFF	; 255
 952:	7f ef       	ldi	r23, 0xFF	; 255
 954:	c5 01       	movw	r24, r10
 956:	0e 94 cf 05 	call	0xb9e	; 0xb9e <strnlen_P>
 95a:	4c 01       	movw	r8, r24
 95c:	f3 2d       	mov	r31, r3
 95e:	f0 68       	ori	r31, 0x80	; 128
 960:	3f 2e       	mov	r3, r31
 962:	82 01       	movw	r16, r4
 964:	33 fc       	sbrc	r3, 3
 966:	1b c0       	rjmp	.+54     	; 0x99e <__stack+0x9f>
 968:	82 2d       	mov	r24, r2
 96a:	90 e0       	ldi	r25, 0x00	; 0
 96c:	88 16       	cp	r8, r24
 96e:	99 06       	cpc	r9, r25
 970:	b0 f4       	brcc	.+44     	; 0x99e <__stack+0x9f>
 972:	b6 01       	movw	r22, r12
 974:	80 e2       	ldi	r24, 0x20	; 32
 976:	90 e0       	ldi	r25, 0x00	; 0
 978:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 97c:	2a 94       	dec	r2
 97e:	f4 cf       	rjmp	.-24     	; 0x968 <__stack+0x69>
 980:	f5 01       	movw	r30, r10
 982:	37 fc       	sbrc	r3, 7
 984:	85 91       	lpm	r24, Z+
 986:	37 fe       	sbrs	r3, 7
 988:	81 91       	ld	r24, Z+
 98a:	5f 01       	movw	r10, r30
 98c:	b6 01       	movw	r22, r12
 98e:	90 e0       	ldi	r25, 0x00	; 0
 990:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 994:	21 10       	cpse	r2, r1
 996:	2a 94       	dec	r2
 998:	21 e0       	ldi	r18, 0x01	; 1
 99a:	82 1a       	sub	r8, r18
 99c:	91 08       	sbc	r9, r1
 99e:	81 14       	cp	r8, r1
 9a0:	91 04       	cpc	r9, r1
 9a2:	71 f7       	brne	.-36     	; 0x980 <__stack+0x81>
 9a4:	e8 c0       	rjmp	.+464    	; 0xb76 <__stack+0x277>
 9a6:	84 36       	cpi	r24, 0x64	; 100
 9a8:	11 f0       	breq	.+4      	; 0x9ae <__stack+0xaf>
 9aa:	89 36       	cpi	r24, 0x69	; 105
 9ac:	41 f5       	brne	.+80     	; 0x9fe <__stack+0xff>
 9ae:	f8 01       	movw	r30, r16
 9b0:	37 fe       	sbrs	r3, 7
 9b2:	07 c0       	rjmp	.+14     	; 0x9c2 <__stack+0xc3>
 9b4:	60 81       	ld	r22, Z
 9b6:	71 81       	ldd	r23, Z+1	; 0x01
 9b8:	82 81       	ldd	r24, Z+2	; 0x02
 9ba:	93 81       	ldd	r25, Z+3	; 0x03
 9bc:	0c 5f       	subi	r16, 0xFC	; 252
 9be:	1f 4f       	sbci	r17, 0xFF	; 255
 9c0:	08 c0       	rjmp	.+16     	; 0x9d2 <__stack+0xd3>
 9c2:	60 81       	ld	r22, Z
 9c4:	71 81       	ldd	r23, Z+1	; 0x01
 9c6:	07 2e       	mov	r0, r23
 9c8:	00 0c       	add	r0, r0
 9ca:	88 0b       	sbc	r24, r24
 9cc:	99 0b       	sbc	r25, r25
 9ce:	0e 5f       	subi	r16, 0xFE	; 254
 9d0:	1f 4f       	sbci	r17, 0xFF	; 255
 9d2:	f3 2d       	mov	r31, r3
 9d4:	ff 76       	andi	r31, 0x6F	; 111
 9d6:	3f 2e       	mov	r3, r31
 9d8:	97 ff       	sbrs	r25, 7
 9da:	09 c0       	rjmp	.+18     	; 0x9ee <__stack+0xef>
 9dc:	90 95       	com	r25
 9de:	80 95       	com	r24
 9e0:	70 95       	com	r23
 9e2:	61 95       	neg	r22
 9e4:	7f 4f       	sbci	r23, 0xFF	; 255
 9e6:	8f 4f       	sbci	r24, 0xFF	; 255
 9e8:	9f 4f       	sbci	r25, 0xFF	; 255
 9ea:	f0 68       	ori	r31, 0x80	; 128
 9ec:	3f 2e       	mov	r3, r31
 9ee:	2a e0       	ldi	r18, 0x0A	; 10
 9f0:	30 e0       	ldi	r19, 0x00	; 0
 9f2:	a3 01       	movw	r20, r6
 9f4:	0e 94 21 06 	call	0xc42	; 0xc42 <__ultoa_invert>
 9f8:	88 2e       	mov	r8, r24
 9fa:	86 18       	sub	r8, r6
 9fc:	45 c0       	rjmp	.+138    	; 0xa88 <__stack+0x189>
 9fe:	85 37       	cpi	r24, 0x75	; 117
 a00:	31 f4       	brne	.+12     	; 0xa0e <__stack+0x10f>
 a02:	23 2d       	mov	r18, r3
 a04:	2f 7e       	andi	r18, 0xEF	; 239
 a06:	b2 2e       	mov	r11, r18
 a08:	2a e0       	ldi	r18, 0x0A	; 10
 a0a:	30 e0       	ldi	r19, 0x00	; 0
 a0c:	25 c0       	rjmp	.+74     	; 0xa58 <__stack+0x159>
 a0e:	93 2d       	mov	r25, r3
 a10:	99 7f       	andi	r25, 0xF9	; 249
 a12:	b9 2e       	mov	r11, r25
 a14:	8f 36       	cpi	r24, 0x6F	; 111
 a16:	c1 f0       	breq	.+48     	; 0xa48 <__stack+0x149>
 a18:	18 f4       	brcc	.+6      	; 0xa20 <__stack+0x121>
 a1a:	88 35       	cpi	r24, 0x58	; 88
 a1c:	79 f0       	breq	.+30     	; 0xa3c <__stack+0x13d>
 a1e:	b5 c0       	rjmp	.+362    	; 0xb8a <__stack+0x28b>
 a20:	80 37       	cpi	r24, 0x70	; 112
 a22:	19 f0       	breq	.+6      	; 0xa2a <__stack+0x12b>
 a24:	88 37       	cpi	r24, 0x78	; 120
 a26:	21 f0       	breq	.+8      	; 0xa30 <__stack+0x131>
 a28:	b0 c0       	rjmp	.+352    	; 0xb8a <__stack+0x28b>
 a2a:	e9 2f       	mov	r30, r25
 a2c:	e0 61       	ori	r30, 0x10	; 16
 a2e:	be 2e       	mov	r11, r30
 a30:	b4 fe       	sbrs	r11, 4
 a32:	0d c0       	rjmp	.+26     	; 0xa4e <__stack+0x14f>
 a34:	fb 2d       	mov	r31, r11
 a36:	f4 60       	ori	r31, 0x04	; 4
 a38:	bf 2e       	mov	r11, r31
 a3a:	09 c0       	rjmp	.+18     	; 0xa4e <__stack+0x14f>
 a3c:	34 fe       	sbrs	r3, 4
 a3e:	0a c0       	rjmp	.+20     	; 0xa54 <__stack+0x155>
 a40:	29 2f       	mov	r18, r25
 a42:	26 60       	ori	r18, 0x06	; 6
 a44:	b2 2e       	mov	r11, r18
 a46:	06 c0       	rjmp	.+12     	; 0xa54 <__stack+0x155>
 a48:	28 e0       	ldi	r18, 0x08	; 8
 a4a:	30 e0       	ldi	r19, 0x00	; 0
 a4c:	05 c0       	rjmp	.+10     	; 0xa58 <__stack+0x159>
 a4e:	20 e1       	ldi	r18, 0x10	; 16
 a50:	30 e0       	ldi	r19, 0x00	; 0
 a52:	02 c0       	rjmp	.+4      	; 0xa58 <__stack+0x159>
 a54:	20 e1       	ldi	r18, 0x10	; 16
 a56:	32 e0       	ldi	r19, 0x02	; 2
 a58:	f8 01       	movw	r30, r16
 a5a:	b7 fe       	sbrs	r11, 7
 a5c:	07 c0       	rjmp	.+14     	; 0xa6c <__stack+0x16d>
 a5e:	60 81       	ld	r22, Z
 a60:	71 81       	ldd	r23, Z+1	; 0x01
 a62:	82 81       	ldd	r24, Z+2	; 0x02
 a64:	93 81       	ldd	r25, Z+3	; 0x03
 a66:	0c 5f       	subi	r16, 0xFC	; 252
 a68:	1f 4f       	sbci	r17, 0xFF	; 255
 a6a:	06 c0       	rjmp	.+12     	; 0xa78 <__stack+0x179>
 a6c:	60 81       	ld	r22, Z
 a6e:	71 81       	ldd	r23, Z+1	; 0x01
 a70:	80 e0       	ldi	r24, 0x00	; 0
 a72:	90 e0       	ldi	r25, 0x00	; 0
 a74:	0e 5f       	subi	r16, 0xFE	; 254
 a76:	1f 4f       	sbci	r17, 0xFF	; 255
 a78:	a3 01       	movw	r20, r6
 a7a:	0e 94 21 06 	call	0xc42	; 0xc42 <__ultoa_invert>
 a7e:	88 2e       	mov	r8, r24
 a80:	86 18       	sub	r8, r6
 a82:	fb 2d       	mov	r31, r11
 a84:	ff 77       	andi	r31, 0x7F	; 127
 a86:	3f 2e       	mov	r3, r31
 a88:	36 fe       	sbrs	r3, 6
 a8a:	0d c0       	rjmp	.+26     	; 0xaa6 <__stack+0x1a7>
 a8c:	23 2d       	mov	r18, r3
 a8e:	2e 7f       	andi	r18, 0xFE	; 254
 a90:	a2 2e       	mov	r10, r18
 a92:	89 14       	cp	r8, r9
 a94:	58 f4       	brcc	.+22     	; 0xaac <__stack+0x1ad>
 a96:	34 fe       	sbrs	r3, 4
 a98:	0b c0       	rjmp	.+22     	; 0xab0 <__stack+0x1b1>
 a9a:	32 fc       	sbrc	r3, 2
 a9c:	09 c0       	rjmp	.+18     	; 0xab0 <__stack+0x1b1>
 a9e:	83 2d       	mov	r24, r3
 aa0:	8e 7e       	andi	r24, 0xEE	; 238
 aa2:	a8 2e       	mov	r10, r24
 aa4:	05 c0       	rjmp	.+10     	; 0xab0 <__stack+0x1b1>
 aa6:	b8 2c       	mov	r11, r8
 aa8:	a3 2c       	mov	r10, r3
 aaa:	03 c0       	rjmp	.+6      	; 0xab2 <__stack+0x1b3>
 aac:	b8 2c       	mov	r11, r8
 aae:	01 c0       	rjmp	.+2      	; 0xab2 <__stack+0x1b3>
 ab0:	b9 2c       	mov	r11, r9
 ab2:	a4 fe       	sbrs	r10, 4
 ab4:	0f c0       	rjmp	.+30     	; 0xad4 <__stack+0x1d5>
 ab6:	fe 01       	movw	r30, r28
 ab8:	e8 0d       	add	r30, r8
 aba:	f1 1d       	adc	r31, r1
 abc:	80 81       	ld	r24, Z
 abe:	80 33       	cpi	r24, 0x30	; 48
 ac0:	21 f4       	brne	.+8      	; 0xaca <__stack+0x1cb>
 ac2:	9a 2d       	mov	r25, r10
 ac4:	99 7e       	andi	r25, 0xE9	; 233
 ac6:	a9 2e       	mov	r10, r25
 ac8:	09 c0       	rjmp	.+18     	; 0xadc <__stack+0x1dd>
 aca:	a2 fe       	sbrs	r10, 2
 acc:	06 c0       	rjmp	.+12     	; 0xada <__stack+0x1db>
 ace:	b3 94       	inc	r11
 ad0:	b3 94       	inc	r11
 ad2:	04 c0       	rjmp	.+8      	; 0xadc <__stack+0x1dd>
 ad4:	8a 2d       	mov	r24, r10
 ad6:	86 78       	andi	r24, 0x86	; 134
 ad8:	09 f0       	breq	.+2      	; 0xadc <__stack+0x1dd>
 ada:	b3 94       	inc	r11
 adc:	a3 fc       	sbrc	r10, 3
 ade:	11 c0       	rjmp	.+34     	; 0xb02 <__stack+0x203>
 ae0:	a0 fe       	sbrs	r10, 0
 ae2:	06 c0       	rjmp	.+12     	; 0xaf0 <__stack+0x1f1>
 ae4:	b2 14       	cp	r11, r2
 ae6:	88 f4       	brcc	.+34     	; 0xb0a <__stack+0x20b>
 ae8:	28 0c       	add	r2, r8
 aea:	92 2c       	mov	r9, r2
 aec:	9b 18       	sub	r9, r11
 aee:	0e c0       	rjmp	.+28     	; 0xb0c <__stack+0x20d>
 af0:	b2 14       	cp	r11, r2
 af2:	60 f4       	brcc	.+24     	; 0xb0c <__stack+0x20d>
 af4:	b6 01       	movw	r22, r12
 af6:	80 e2       	ldi	r24, 0x20	; 32
 af8:	90 e0       	ldi	r25, 0x00	; 0
 afa:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 afe:	b3 94       	inc	r11
 b00:	f7 cf       	rjmp	.-18     	; 0xaf0 <__stack+0x1f1>
 b02:	b2 14       	cp	r11, r2
 b04:	18 f4       	brcc	.+6      	; 0xb0c <__stack+0x20d>
 b06:	2b 18       	sub	r2, r11
 b08:	02 c0       	rjmp	.+4      	; 0xb0e <__stack+0x20f>
 b0a:	98 2c       	mov	r9, r8
 b0c:	21 2c       	mov	r2, r1
 b0e:	a4 fe       	sbrs	r10, 4
 b10:	10 c0       	rjmp	.+32     	; 0xb32 <__stack+0x233>
 b12:	b6 01       	movw	r22, r12
 b14:	80 e3       	ldi	r24, 0x30	; 48
 b16:	90 e0       	ldi	r25, 0x00	; 0
 b18:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 b1c:	a2 fe       	sbrs	r10, 2
 b1e:	17 c0       	rjmp	.+46     	; 0xb4e <__stack+0x24f>
 b20:	a1 fc       	sbrc	r10, 1
 b22:	03 c0       	rjmp	.+6      	; 0xb2a <__stack+0x22b>
 b24:	88 e7       	ldi	r24, 0x78	; 120
 b26:	90 e0       	ldi	r25, 0x00	; 0
 b28:	02 c0       	rjmp	.+4      	; 0xb2e <__stack+0x22f>
 b2a:	88 e5       	ldi	r24, 0x58	; 88
 b2c:	90 e0       	ldi	r25, 0x00	; 0
 b2e:	b6 01       	movw	r22, r12
 b30:	0c c0       	rjmp	.+24     	; 0xb4a <__stack+0x24b>
 b32:	8a 2d       	mov	r24, r10
 b34:	86 78       	andi	r24, 0x86	; 134
 b36:	59 f0       	breq	.+22     	; 0xb4e <__stack+0x24f>
 b38:	a1 fe       	sbrs	r10, 1
 b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__stack+0x241>
 b3c:	8b e2       	ldi	r24, 0x2B	; 43
 b3e:	01 c0       	rjmp	.+2      	; 0xb42 <__stack+0x243>
 b40:	80 e2       	ldi	r24, 0x20	; 32
 b42:	a7 fc       	sbrc	r10, 7
 b44:	8d e2       	ldi	r24, 0x2D	; 45
 b46:	b6 01       	movw	r22, r12
 b48:	90 e0       	ldi	r25, 0x00	; 0
 b4a:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 b4e:	89 14       	cp	r8, r9
 b50:	38 f4       	brcc	.+14     	; 0xb60 <__stack+0x261>
 b52:	b6 01       	movw	r22, r12
 b54:	80 e3       	ldi	r24, 0x30	; 48
 b56:	90 e0       	ldi	r25, 0x00	; 0
 b58:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 b5c:	9a 94       	dec	r9
 b5e:	f7 cf       	rjmp	.-18     	; 0xb4e <__stack+0x24f>
 b60:	8a 94       	dec	r8
 b62:	f3 01       	movw	r30, r6
 b64:	e8 0d       	add	r30, r8
 b66:	f1 1d       	adc	r31, r1
 b68:	80 81       	ld	r24, Z
 b6a:	b6 01       	movw	r22, r12
 b6c:	90 e0       	ldi	r25, 0x00	; 0
 b6e:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 b72:	81 10       	cpse	r8, r1
 b74:	f5 cf       	rjmp	.-22     	; 0xb60 <__stack+0x261>
 b76:	22 20       	and	r2, r2
 b78:	09 f4       	brne	.+2      	; 0xb7c <__stack+0x27d>
 b7a:	42 ce       	rjmp	.-892    	; 0x800 <vfprintf+0x24>
 b7c:	b6 01       	movw	r22, r12
 b7e:	80 e2       	ldi	r24, 0x20	; 32
 b80:	90 e0       	ldi	r25, 0x00	; 0
 b82:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 b86:	2a 94       	dec	r2
 b88:	f6 cf       	rjmp	.-20     	; 0xb76 <__stack+0x277>
 b8a:	f6 01       	movw	r30, r12
 b8c:	86 81       	ldd	r24, Z+6	; 0x06
 b8e:	97 81       	ldd	r25, Z+7	; 0x07
 b90:	02 c0       	rjmp	.+4      	; 0xb96 <__stack+0x297>
 b92:	8f ef       	ldi	r24, 0xFF	; 255
 b94:	9f ef       	ldi	r25, 0xFF	; 255
 b96:	2b 96       	adiw	r28, 0x0b	; 11
 b98:	e2 e1       	ldi	r30, 0x12	; 18
 b9a:	0c 94 9b 06 	jmp	0xd36	; 0xd36 <__epilogue_restores__>

00000b9e <strnlen_P>:
 b9e:	fc 01       	movw	r30, r24
 ba0:	05 90       	lpm	r0, Z+
 ba2:	61 50       	subi	r22, 0x01	; 1
 ba4:	70 40       	sbci	r23, 0x00	; 0
 ba6:	01 10       	cpse	r0, r1
 ba8:	d8 f7       	brcc	.-10     	; 0xba0 <strnlen_P+0x2>
 baa:	80 95       	com	r24
 bac:	90 95       	com	r25
 bae:	8e 0f       	add	r24, r30
 bb0:	9f 1f       	adc	r25, r31
 bb2:	08 95       	ret

00000bb4 <strnlen>:
 bb4:	fc 01       	movw	r30, r24
 bb6:	61 50       	subi	r22, 0x01	; 1
 bb8:	70 40       	sbci	r23, 0x00	; 0
 bba:	01 90       	ld	r0, Z+
 bbc:	01 10       	cpse	r0, r1
 bbe:	d8 f7       	brcc	.-10     	; 0xbb6 <strnlen+0x2>
 bc0:	80 95       	com	r24
 bc2:	90 95       	com	r25
 bc4:	8e 0f       	add	r24, r30
 bc6:	9f 1f       	adc	r25, r31
 bc8:	08 95       	ret

00000bca <fputc>:
 bca:	0f 93       	push	r16
 bcc:	1f 93       	push	r17
 bce:	cf 93       	push	r28
 bd0:	df 93       	push	r29
 bd2:	fb 01       	movw	r30, r22
 bd4:	23 81       	ldd	r18, Z+3	; 0x03
 bd6:	21 fd       	sbrc	r18, 1
 bd8:	03 c0       	rjmp	.+6      	; 0xbe0 <fputc+0x16>
 bda:	8f ef       	ldi	r24, 0xFF	; 255
 bdc:	9f ef       	ldi	r25, 0xFF	; 255
 bde:	2c c0       	rjmp	.+88     	; 0xc38 <fputc+0x6e>
 be0:	22 ff       	sbrs	r18, 2
 be2:	16 c0       	rjmp	.+44     	; 0xc10 <fputc+0x46>
 be4:	46 81       	ldd	r20, Z+6	; 0x06
 be6:	57 81       	ldd	r21, Z+7	; 0x07
 be8:	24 81       	ldd	r18, Z+4	; 0x04
 bea:	35 81       	ldd	r19, Z+5	; 0x05
 bec:	42 17       	cp	r20, r18
 bee:	53 07       	cpc	r21, r19
 bf0:	44 f4       	brge	.+16     	; 0xc02 <fputc+0x38>
 bf2:	a0 81       	ld	r26, Z
 bf4:	b1 81       	ldd	r27, Z+1	; 0x01
 bf6:	9d 01       	movw	r18, r26
 bf8:	2f 5f       	subi	r18, 0xFF	; 255
 bfa:	3f 4f       	sbci	r19, 0xFF	; 255
 bfc:	31 83       	std	Z+1, r19	; 0x01
 bfe:	20 83       	st	Z, r18
 c00:	8c 93       	st	X, r24
 c02:	26 81       	ldd	r18, Z+6	; 0x06
 c04:	37 81       	ldd	r19, Z+7	; 0x07
 c06:	2f 5f       	subi	r18, 0xFF	; 255
 c08:	3f 4f       	sbci	r19, 0xFF	; 255
 c0a:	37 83       	std	Z+7, r19	; 0x07
 c0c:	26 83       	std	Z+6, r18	; 0x06
 c0e:	14 c0       	rjmp	.+40     	; 0xc38 <fputc+0x6e>
 c10:	8b 01       	movw	r16, r22
 c12:	ec 01       	movw	r28, r24
 c14:	fb 01       	movw	r30, r22
 c16:	00 84       	ldd	r0, Z+8	; 0x08
 c18:	f1 85       	ldd	r31, Z+9	; 0x09
 c1a:	e0 2d       	mov	r30, r0
 c1c:	09 95       	icall
 c1e:	89 2b       	or	r24, r25
 c20:	e1 f6       	brne	.-72     	; 0xbda <fputc+0x10>
 c22:	d8 01       	movw	r26, r16
 c24:	16 96       	adiw	r26, 0x06	; 6
 c26:	8d 91       	ld	r24, X+
 c28:	9c 91       	ld	r25, X
 c2a:	17 97       	sbiw	r26, 0x07	; 7
 c2c:	01 96       	adiw	r24, 0x01	; 1
 c2e:	17 96       	adiw	r26, 0x07	; 7
 c30:	9c 93       	st	X, r25
 c32:	8e 93       	st	-X, r24
 c34:	16 97       	sbiw	r26, 0x06	; 6
 c36:	ce 01       	movw	r24, r28
 c38:	df 91       	pop	r29
 c3a:	cf 91       	pop	r28
 c3c:	1f 91       	pop	r17
 c3e:	0f 91       	pop	r16
 c40:	08 95       	ret

00000c42 <__ultoa_invert>:
 c42:	fa 01       	movw	r30, r20
 c44:	aa 27       	eor	r26, r26
 c46:	28 30       	cpi	r18, 0x08	; 8
 c48:	51 f1       	breq	.+84     	; 0xc9e <__ultoa_invert+0x5c>
 c4a:	20 31       	cpi	r18, 0x10	; 16
 c4c:	81 f1       	breq	.+96     	; 0xcae <__ultoa_invert+0x6c>
 c4e:	e8 94       	clt
 c50:	6f 93       	push	r22
 c52:	6e 7f       	andi	r22, 0xFE	; 254
 c54:	6e 5f       	subi	r22, 0xFE	; 254
 c56:	7f 4f       	sbci	r23, 0xFF	; 255
 c58:	8f 4f       	sbci	r24, 0xFF	; 255
 c5a:	9f 4f       	sbci	r25, 0xFF	; 255
 c5c:	af 4f       	sbci	r26, 0xFF	; 255
 c5e:	b1 e0       	ldi	r27, 0x01	; 1
 c60:	3e d0       	rcall	.+124    	; 0xcde <__ultoa_invert+0x9c>
 c62:	b4 e0       	ldi	r27, 0x04	; 4
 c64:	3c d0       	rcall	.+120    	; 0xcde <__ultoa_invert+0x9c>
 c66:	67 0f       	add	r22, r23
 c68:	78 1f       	adc	r23, r24
 c6a:	89 1f       	adc	r24, r25
 c6c:	9a 1f       	adc	r25, r26
 c6e:	a1 1d       	adc	r26, r1
 c70:	68 0f       	add	r22, r24
 c72:	79 1f       	adc	r23, r25
 c74:	8a 1f       	adc	r24, r26
 c76:	91 1d       	adc	r25, r1
 c78:	a1 1d       	adc	r26, r1
 c7a:	6a 0f       	add	r22, r26
 c7c:	71 1d       	adc	r23, r1
 c7e:	81 1d       	adc	r24, r1
 c80:	91 1d       	adc	r25, r1
 c82:	a1 1d       	adc	r26, r1
 c84:	20 d0       	rcall	.+64     	; 0xcc6 <__ultoa_invert+0x84>
 c86:	09 f4       	brne	.+2      	; 0xc8a <__ultoa_invert+0x48>
 c88:	68 94       	set
 c8a:	3f 91       	pop	r19
 c8c:	2a e0       	ldi	r18, 0x0A	; 10
 c8e:	26 9f       	mul	r18, r22
 c90:	11 24       	eor	r1, r1
 c92:	30 19       	sub	r19, r0
 c94:	30 5d       	subi	r19, 0xD0	; 208
 c96:	31 93       	st	Z+, r19
 c98:	de f6       	brtc	.-74     	; 0xc50 <__ultoa_invert+0xe>
 c9a:	cf 01       	movw	r24, r30
 c9c:	08 95       	ret
 c9e:	46 2f       	mov	r20, r22
 ca0:	47 70       	andi	r20, 0x07	; 7
 ca2:	40 5d       	subi	r20, 0xD0	; 208
 ca4:	41 93       	st	Z+, r20
 ca6:	b3 e0       	ldi	r27, 0x03	; 3
 ca8:	0f d0       	rcall	.+30     	; 0xcc8 <__ultoa_invert+0x86>
 caa:	c9 f7       	brne	.-14     	; 0xc9e <__ultoa_invert+0x5c>
 cac:	f6 cf       	rjmp	.-20     	; 0xc9a <__ultoa_invert+0x58>
 cae:	46 2f       	mov	r20, r22
 cb0:	4f 70       	andi	r20, 0x0F	; 15
 cb2:	40 5d       	subi	r20, 0xD0	; 208
 cb4:	4a 33       	cpi	r20, 0x3A	; 58
 cb6:	18 f0       	brcs	.+6      	; 0xcbe <__ultoa_invert+0x7c>
 cb8:	49 5d       	subi	r20, 0xD9	; 217
 cba:	31 fd       	sbrc	r19, 1
 cbc:	40 52       	subi	r20, 0x20	; 32
 cbe:	41 93       	st	Z+, r20
 cc0:	02 d0       	rcall	.+4      	; 0xcc6 <__ultoa_invert+0x84>
 cc2:	a9 f7       	brne	.-22     	; 0xcae <__ultoa_invert+0x6c>
 cc4:	ea cf       	rjmp	.-44     	; 0xc9a <__ultoa_invert+0x58>
 cc6:	b4 e0       	ldi	r27, 0x04	; 4
 cc8:	a6 95       	lsr	r26
 cca:	97 95       	ror	r25
 ccc:	87 95       	ror	r24
 cce:	77 95       	ror	r23
 cd0:	67 95       	ror	r22
 cd2:	ba 95       	dec	r27
 cd4:	c9 f7       	brne	.-14     	; 0xcc8 <__ultoa_invert+0x86>
 cd6:	00 97       	sbiw	r24, 0x00	; 0
 cd8:	61 05       	cpc	r22, r1
 cda:	71 05       	cpc	r23, r1
 cdc:	08 95       	ret
 cde:	9b 01       	movw	r18, r22
 ce0:	ac 01       	movw	r20, r24
 ce2:	0a 2e       	mov	r0, r26
 ce4:	06 94       	lsr	r0
 ce6:	57 95       	ror	r21
 ce8:	47 95       	ror	r20
 cea:	37 95       	ror	r19
 cec:	27 95       	ror	r18
 cee:	ba 95       	dec	r27
 cf0:	c9 f7       	brne	.-14     	; 0xce4 <__ultoa_invert+0xa2>
 cf2:	62 0f       	add	r22, r18
 cf4:	73 1f       	adc	r23, r19
 cf6:	84 1f       	adc	r24, r20
 cf8:	95 1f       	adc	r25, r21
 cfa:	a0 1d       	adc	r26, r0
 cfc:	08 95       	ret

00000cfe <__prologue_saves__>:
 cfe:	2f 92       	push	r2
 d00:	3f 92       	push	r3
 d02:	4f 92       	push	r4
 d04:	5f 92       	push	r5
 d06:	6f 92       	push	r6
 d08:	7f 92       	push	r7
 d0a:	8f 92       	push	r8
 d0c:	9f 92       	push	r9
 d0e:	af 92       	push	r10
 d10:	bf 92       	push	r11
 d12:	cf 92       	push	r12
 d14:	df 92       	push	r13
 d16:	ef 92       	push	r14
 d18:	ff 92       	push	r15
 d1a:	0f 93       	push	r16
 d1c:	1f 93       	push	r17
 d1e:	cf 93       	push	r28
 d20:	df 93       	push	r29
 d22:	cd b7       	in	r28, 0x3d	; 61
 d24:	de b7       	in	r29, 0x3e	; 62
 d26:	ca 1b       	sub	r28, r26
 d28:	db 0b       	sbc	r29, r27
 d2a:	0f b6       	in	r0, 0x3f	; 63
 d2c:	f8 94       	cli
 d2e:	de bf       	out	0x3e, r29	; 62
 d30:	0f be       	out	0x3f, r0	; 63
 d32:	cd bf       	out	0x3d, r28	; 61
 d34:	09 94       	ijmp

00000d36 <__epilogue_restores__>:
 d36:	2a 88       	ldd	r2, Y+18	; 0x12
 d38:	39 88       	ldd	r3, Y+17	; 0x11
 d3a:	48 88       	ldd	r4, Y+16	; 0x10
 d3c:	5f 84       	ldd	r5, Y+15	; 0x0f
 d3e:	6e 84       	ldd	r6, Y+14	; 0x0e
 d40:	7d 84       	ldd	r7, Y+13	; 0x0d
 d42:	8c 84       	ldd	r8, Y+12	; 0x0c
 d44:	9b 84       	ldd	r9, Y+11	; 0x0b
 d46:	aa 84       	ldd	r10, Y+10	; 0x0a
 d48:	b9 84       	ldd	r11, Y+9	; 0x09
 d4a:	c8 84       	ldd	r12, Y+8	; 0x08
 d4c:	df 80       	ldd	r13, Y+7	; 0x07
 d4e:	ee 80       	ldd	r14, Y+6	; 0x06
 d50:	fd 80       	ldd	r15, Y+5	; 0x05
 d52:	0c 81       	ldd	r16, Y+4	; 0x04
 d54:	1b 81       	ldd	r17, Y+3	; 0x03
 d56:	aa 81       	ldd	r26, Y+2	; 0x02
 d58:	b9 81       	ldd	r27, Y+1	; 0x01
 d5a:	ce 0f       	add	r28, r30
 d5c:	d1 1d       	adc	r29, r1
 d5e:	0f b6       	in	r0, 0x3f	; 63
 d60:	f8 94       	cli
 d62:	de bf       	out	0x3e, r29	; 62
 d64:	0f be       	out	0x3f, r0	; 63
 d66:	cd bf       	out	0x3d, r28	; 61
 d68:	ed 01       	movw	r28, r26
 d6a:	08 95       	ret

00000d6c <_exit>:
 d6c:	f8 94       	cli

00000d6e <__stop_program>:
 d6e:	ff cf       	rjmp	.-2      	; 0xd6e <__stop_program>
